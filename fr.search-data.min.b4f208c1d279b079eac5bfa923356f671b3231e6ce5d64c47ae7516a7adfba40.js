'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/panel/','title':"Le Panel",'section':"Docs",'content':"Le Panel #  Le site internet de la r22 utilise C.M.S. 1 Kirby 3. Vous trouverez une documentation détaillée du C.M.S. sur leur site internet (en anglais). N’hésitez pas à y faire un tour si vous êtes curieux·euse.\nLe Panel est le back-office, ou bureau arrière du site internet. C’est un outil de gestion qui vous permet de modifier le contenu du site internet, c’est-à-dire de changer les textes, modifier les photos, ajouter des vidéos, changer les dates d’un événement, créer et supprimer des pages, etc. et qui n’est visible et accessible que par les administrateur·rice·s du site.\nÀ l’inverse du front-office, ou bureau avant, qui est la partie du site visible par tout le monde.\nSi vous êtes familier·ère·s avec Kirby 3, la structure du site de la r22 vous sera également familière. Si ce n’est pas le cas, voici quelques éléments important à avoir en tête avant de commencer.\n Se connecter au Panel Pour modifier le site internet, vous avez besoin de vous connecter au Panel et d\u0026rsquo;accéder au back-office.\nEn savoir plus   Interface du Panel Le Panel est possède une interface très intuitive, mais quelques éléments sont à connaître pour l\u0026rsquo;utiliser à sa pleine capacité.\nEn savoir plus     Compte utilisateur·ice Pour vous connecter au Panel, vous avez besoin d’un compte utilisateur·ice.\nEn savoir plus       C.M.S. est l\u0026rsquo;abbréviation de Content Managment System en anglais, qui peut se traduire en système de gestion de contenu. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':1,'href':'/docs/contenu/','title':"Le Contenu",'section':"Docs",'content':"Le Contenu #  Cette section traite de la création et de l\u0026rsquo;édition du contenu au sein du Panel. Vous y trouverez des informations sur les contraintes techniques nécessaires à l\u0026rsquo;édition, le savoir de base à acquérir pour modifier le site internet et le les balisages textes essentiels.\n Les pages Les pages sont au cœur du fonctionnement du site internet. Comprendre comment les manipuler, leur statuts spécifiques, leur organisatione et comment travailler à plusieurs avec est essentiel.\nEn savoir plus   Le markdown Le site internet utilise le langage de markage Markdown qui permet de travailler très facilement et efficacement avec le texte et le marquage des pages.\nEn savoir plus     Le contenu dynamique En plus d\u0026rsquo;éléments de balisage, vous pouvez ajouter des éléments dynamique au pages, comme des images, des vidéos, des pistes audios, et cela avec juste quelques lignes de textes.\nEn savoir plus   Les fichiers Les pages peuvent contenir n\u0026rsquo;importe quel nombre de fichier. Ces fichiers sont stockés directement dans le dossier de la page. Vous pouvez les organisez, les annoter et les utiliser à plusieurs endroits dans les pages.\nEn savoir plus    "});index.add({'id':2,'href':'/docs/charte-graphique/','title':"Charte graphique",'section':"Docs",'content':"Charte graphique #  La charte graphique est un guide, et un centre d’information concernant l’identité visuelle de la radio r22 Tout-Monde. Elle donne des informations essentielles quant à l’emploi de ses élements graphiques, typographiques et iconographiques. Elle permet la continuité de l’élaboraiton du site internet, ainsi que la création de documents de communication, autant numériques qu’imprimmés.\nPar exemple, elle informe quant à l’utilisation du logotype, sur les références des couleurs pour le web et pour l’imprimmé, sur le système de composition typographique et les échelles de caractère. Également, sur le jeu d’icône de la radio, sur les bandeaux de communication, etc.\nAu début de chaque séction, les différents fichiers spécifiques de celle-ci sont généralement proposé au téléchargement. Vous pouvez également télécharger un dossier de communication, comprenant l’ensemble des éléments graphique de la radio.\n Logotype Guide d’utilisation du logotype de la r22.\nLa suite   Couleurs Le nuancier de la radio, et les conditions d’utilisation des couleurs.\nLa suite     Typographie Détail de l’utilisation des typographies, et du système de composition.\nLa suite   Iconographie Présentation des différentes icones de la radio.\nLa suite    "});index.add({'id':3,'href':'/posts/creating-a-new-theme/','title':"Creating a New Theme",'section':"Blog",'content':"Introduction #  This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nWe\u0026rsquo;ll start with creating a new site with a very basic template. Then we\u0026rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026ldquo;$\u0026rdquo; prompt. The output will follow. Lines that start with \u0026ldquo;#\u0026rdquo; are comments that I\u0026rsquo;ve added to explain a point. When I show updates to a file, the \u0026ldquo;:wq\u0026rdquo; on the last line means to save the file.\nHere\u0026rsquo;s an example:\n## this is a comment $ echo this is a command this is a command ## edit the file $ vi foo.md +++ date = \u0026quot;2014-09-28\u0026quot; title = \u0026quot;creating a new theme\u0026quot; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026quot;2014-09-28\u0026quot; title = \u0026quot;creating a new theme\u0026quot; +++ bah and humbug $ Some Definitions #  There are a few concepts that you need to understand before creating a theme.\nSkins #  Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?\nThe difference between creating a skin in layouts/ and creating it in themes/ is very subtle. A skin in layouts/ can’t be customized without updating the templates and static files that it is built from. A skin created in themes/, on the other hand, can be and that makes it easier for other people to use it.\nThe rest of this tutorial will call a skin created in the themes/ directory a theme.\nNote that you can use this tutorial to create a skin in the layouts/ directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.\nThe Home Page #  The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.\nSite Configuration File #  When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.\nHugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your content/ directory and template files in your themes/ directory. It will create HTML files in your public/ directory. You can change this by specifying alternate locations in the configuration file.\nContent #  Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.\nFront Matter #  The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “+++”, YAML by “---”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.\nThe information in the front matter is passed into the template before the content is rendered into HTML.\nMarkdown #  Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.\nTemplate Files #  Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it\u0026rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.\nThere are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.\nHugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.\nPlease note that you can use the front matter to influence Hugo’s choice of templates.\nSingle Template #  A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.\nList Template #  A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.\nThe homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.\nPartial Template #  A partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.\nCreate a New Site #  Let\u0026rsquo;s use Hugo to create a new web site. I\u0026rsquo;m a Mac user, so I\u0026rsquo;ll create mine in my home directory, in the Sites folder. If you\u0026rsquo;re using Linux, you might have to create the folder first.\nThe \u0026ldquo;new site\u0026rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.\n$ hugo new site ~/Sites/zafta $ cd ~/Sites/zafta $ ls -l total 8 drwxr-xr-x 7 quoha staff 238 Sep 29 16:49 . drwxr-xr-x 3 quoha staff 102 Sep 29 16:49 .. drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static $ Take a look in the content/ directory to confirm that it is empty.\nThe other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That\u0026rsquo;s a topic for a different tutorial, so please ignore them for now.\nGenerate the HTML For the New Site #  Running the hugo command with no options will read all the available content and generate the HTML files. It will also copy all static files (that\u0026rsquo;s everything that\u0026rsquo;s not content). Since we have an empty site, it won\u0026rsquo;t do much, but it will do it very quickly.\n$ hugo --verbose INFO: 2014/09/29 Using config file: config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ The \u0026ldquo;--verbose\u0026rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with \u0026ldquo;INFO:\u0026rdquo; or \u0026ldquo;WARN:\u0026rdquo; is present because we used that flag. The lines that start with \u0026ldquo;WARN:\u0026rdquo; are warning messages. We\u0026rsquo;ll go over them later.\nWe can verify that the command worked by looking at the directory again.\n$ ls -l total 8 drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static $ See that new public/ directory? Hugo placed all generated content there. When you\u0026rsquo;re ready to publish your web site, that\u0026rsquo;s the place to start. For now, though, let\u0026rsquo;s just confirm that we have what we\u0026rsquo;d expect from a site with no content.\n$ ls -l public total 16 -rw-r--r-- 1 quoha staff 416 Sep 29 17:02 index.xml -rw-r--r-- 1 quoha staff 262 Sep 29 17:02 sitemap.xml $ Hugo created two XML files, which is standard, but there are no HTML files.\nTest the New Site #  Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the \u0026ldquo;server\u0026rdquo; command. If it is successful, you will see output similar to the following:\n$ hugo server --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms Serving pages from /Users/quoha/Sites/zafta/public Web Server is available at http://localhost:1313 Press Ctrl+C to stop Connect to the listed URL (it\u0026rsquo;s on the line that starts with \u0026ldquo;Web Server\u0026rdquo;). If everything is working correctly, you should get a page that shows the following:\nindex.xml sitemap.xml That\u0026rsquo;s a listing of your public/ directory. Hugo didn\u0026rsquo;t create a home page because our site has no content. When there\u0026rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.\nLet’s go back and look at those warnings again.\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.\nNow for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.\nI like that the verbose flag causes Hugo to list the files that it\u0026rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we\u0026rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn\u0026rsquo;t find a template for the home page and it told you so.\nAt this point, you\u0026rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.\nCreate a New Theme #  Hugo doesn\u0026rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.\nWe\u0026rsquo;re going to create a new theme called \u0026ldquo;zafta.\u0026rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.\nAll themes have opinions on content and layout. For example, Zafta uses \u0026ldquo;post\u0026rdquo; over \u0026ldquo;blog\u0026rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.\nCreate a Skeleton #  Use the hugo \u0026ldquo;new\u0026rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.\n$ hugo new theme zafta $ ls -l total 8 drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes $ find themes -type f | xargs ls -l -rw-r--r-- 1 quoha staff 1081 Sep 29 17:31 themes/zafta/LICENSE.md -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/archetypes/default.md -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html -rw-r--r-- 1 quoha staff 93 Sep 29 17:31 themes/zafta/theme.toml $ The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.\nPlease take a minute to fill out the theme.toml and LICENSE.md files. They\u0026rsquo;re optional, but if you\u0026rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It\u0026rsquo;s also nice to declare the license so that people will know how they can use the theme.\n$ vi themes/zafta/theme.toml author = \u0026quot;michael d henderson\u0026quot; description = \u0026quot;a minimal working template\u0026quot; license = \u0026quot;MIT\u0026quot; name = \u0026quot;zafta\u0026quot; source_repo = \u0026quot;\u0026quot; tags = [\u0026quot;tags\u0026quot;, \u0026quot;categories\u0026quot;] :wq ## also edit themes/zafta/LICENSE.md and change ## the bit that says \u0026quot;YOUR_NAME_HERE\u0026quot; Note that the the skeleton\u0026rsquo;s template files are empty. Don\u0026rsquo;t worry, we\u0026rsquo;ll be changing that shortly.\n$ find themes/zafta -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html $ Update the Configuration File to Use the Theme #  Now that we\u0026rsquo;ve got a theme to work with, it\u0026rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add \u0026ldquo;-t zafta\u0026rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don\u0026rsquo;t put it in the configuration file or specify it on the command line, you won\u0026rsquo;t use the template that you\u0026rsquo;re expecting to.\nEdit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.\n$ vi config.toml theme = \u0026quot;zafta\u0026quot; baseurl = \u0026quot;\u0026quot; languageCode = \u0026quot;en-us\u0026quot; title = \u0026quot;zafta - totally refreshing\u0026quot; MetaDataFormat = \u0026quot;toml\u0026quot; :wq $ Generate the Site #  Now that we have an empty theme, let\u0026rsquo;s generate the site again.\n$ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme\u0026rsquo;s directory.\nLet\u0026rsquo;s check the public/ directory to see what Hugo\u0026rsquo;s created.\n$ ls -l public total 16 drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 css -rw-r--r-- 1 quoha staff 0 Sep 29 17:56 index.html -rw-r--r-- 1 quoha staff 407 Sep 29 17:56 index.xml drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 js -rw-r--r-- 1 quoha staff 243 Sep 29 17:56 sitemap.xml $ Notice four things:\n Hugo created a home page. This is the file public/index.html. Hugo created a css/ directory. Hugo created a js/ directory. Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn\u0026rsquo;t create any pages. That\u0026rsquo;s because it considers a \u0026ldquo;page\u0026rdquo; to be a file created directly from a content file. It doesn\u0026rsquo;t count things like the index.html files that it creates automatically.  The Home Page #  Hugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo\u0026rsquo;s warning message shows that it looks for three different templates:\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] If it can\u0026rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.\nWhen Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.\n$ find . -name index.html | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 20:21 ./public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 ./themes/zafta/layouts/index.html $ The Magic of Static #  Hugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.\nHugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo\u0026rsquo;s opinion is that you\u0026rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don\u0026rsquo;t like that, you can change the directory names in your theme directory or even delete them completely. Hugo\u0026rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.\n$ find themes/zafta -type d | xargs ls -ld drwxr-xr-x 7 quoha staff 238 Sep 29 17:38 themes/zafta drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes/zafta/archetypes drwxr-xr-x 5 quoha staff 170 Sep 29 17:31 themes/zafta/layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/_default drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/partials drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/static drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/css drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/js $ The Theme Development Cycle #  When you\u0026rsquo;re working on a theme, you will make changes in the theme\u0026rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:\n Purge the public/ directory. Run the built in web server in watch mode. Open your site in a browser. Update the theme. Glance at your browser window to see changes. Return to step 4.  I’ll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.\nCheck the main Hugo site for information on using Git with Hugo.\nPurge the public/ Directory #  When generating the site, Hugo will create new files and update existing ones in the public/ directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.\nNote: If you\u0026rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.\nHugo\u0026rsquo;s Watch Option #  Hugo\u0026rsquo;s \u0026ldquo;--watch\u0026rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.\nLive Reload #  Hugo\u0026rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, \u0026ldquo;Wow, that\u0026rsquo;s totally amazing.\u0026rdquo;\nDevelopment Commands #  Use the following commands as the basis for your workflow.\n## purge old files. hugo will recreate the public directory. ## $ rm -rf public ## ## run hugo in watch mode ## $ hugo server --watch --verbose Here\u0026rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I\u0026rsquo;ve said this before, it\u0026rsquo;s amazing.\n$ rm -rf public $ hugo server --watch --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms Watching for changes in /Users/quoha/Sites/zafta/content Serving pages from /Users/quoha/Sites/zafta/public Web Server is available at http://localhost:1313 Press Ctrl+C to stop INFO: 2014/09/29 File System Event: [\u0026quot;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html\u0026quot;: MODIFY|ATTRIB] Change detected, rebuilding site WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 1 ms Update the Home Page Template #  The home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme\u0026rsquo;s layout/ directory:\n index.html _default/list.html _default/single.html  We could update one of the default templates, but a good design decision is to update the most specific template available. That\u0026rsquo;s not a hard and fast rule (in fact, we\u0026rsquo;ll break it a few times in this tutorial), but it is a good generalization.\nMake a Static Home Page #  Right now, that page is empty because we don\u0026rsquo;t have any content and we don\u0026rsquo;t have any logic in the template. Let\u0026rsquo;s change that by adding some text to the template.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Build the web site and then verify the results.\n$ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 78 Sep 29 21:26 public/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/html\u0026gt; Live Reload #  Note: If you\u0026rsquo;re running the server with the --watch option, you\u0026rsquo;ll see different content in the file:\n$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;script\u0026gt;document.write('\u0026lt;script src=\u0026quot;http://' + (location.host || 'localhost').split(':')[0] + ':1313/livereload.js?mindelay=10\u0026quot;\u0026gt;\u0026lt;/' + 'script\u0026gt;')\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; When you use --watch, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.\nBuild a \u0026ldquo;Dynamic\u0026rdquo; Home Page #  \u0026ldquo;Dynamic home page?\u0026rdquo; Hugo\u0026rsquo;s a static web site generator, so this seems an odd thing to say. I mean let\u0026rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We\u0026rsquo;ll use iteration in the template to do that.\nCreate New Posts #  Now that we have the home page generating static content, let\u0026rsquo;s add some content to the site. We\u0026rsquo;ll display these posts as a list on the home page and on their own page, too.\nHugo has a command to generate a skeleton post, just like it does for sites and themes.\n$ hugo --verbose new post/first.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/first.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md ERROR: 2014/09/29 Unable to Cast \u0026lt;nil\u0026gt; to map[string]interface{} $ That wasn\u0026rsquo;t very nice, was it?\nThe \u0026ldquo;new\u0026rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there\u0026rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.\n$ vi themes/zafta/archetypes/post.md +++ Description = \u0026quot;\u0026quot; Tags = [] Categories = [] +++ :wq $ find themes/zafta/archetypes -type f | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 21:53 themes/zafta/archetypes/default.md -rw-r--r-- 1 quoha staff 51 Sep 29 21:54 themes/zafta/archetypes/post.md $ hugo --verbose new post/first.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/first.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md /Users/quoha/Sites/zafta/content/post/first.md created $ hugo --verbose new post/second.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/second.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md /Users/quoha/Sites/zafta/content/post/second.md created $ ls -l content/post total 16 -rw-r--r-- 1 quoha staff 104 Sep 29 21:54 first.md -rw-r--r-- 1 quoha staff 105 Sep 29 21:57 second.md $ cat content/post/first.md +++ Categories = [] Description = \u0026quot;\u0026quot; Tags = [] date = \u0026quot;2014-09-29T21:54:53-05:00\u0026quot; title = \u0026quot;first\u0026quot; +++ my first post $ cat content/post/second.md +++ Categories = [] Description = \u0026quot;\u0026quot; Tags = [] date = \u0026quot;2014-09-29T21:57:09-05:00\u0026quot; title = \u0026quot;second\u0026quot; +++ my second post $ Build the web site and then verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;, \u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ The output says that it created 2 pages. Those are our new posts:\n$ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 78 Sep 29 22:13 public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/second/index.html $ The new files are empty because because the templates used to generate the content are empty. The homepage doesn\u0026rsquo;t show the new content, either. We have to update the templates to add the posts.\nList and Single Templates #  In Hugo, we have three major kinds of templates. There\u0026rsquo;s the home page template that we updated previously. It is used only by the home page. We also have \u0026ldquo;single\u0026rdquo; templates which are used to generate output for a single content file. We also have \u0026ldquo;list\u0026rdquo; templates that are used to group multiple pieces of content before generating output.\nGenerally speaking, list templates are named \u0026ldquo;list.html\u0026rdquo; and single templates are named \u0026ldquo;single.html.\u0026rdquo;\nThere are three other types of templates: partials, content views, and terms. We will not go into much detail on these.\nAdd Content to the Homepage #  The home page will contain a list of posts. Let\u0026rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; {{ range first 10 .Data.Pages }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between \u0026ldquo;{{\u0026rdquo; and \u0026ldquo;}}\u0026rdquo;. In our template, the commands are:\n range .Title end  The \u0026ldquo;range\u0026rdquo; command is an iterator. We\u0026rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.\nThe \u0026ldquo;.Title\u0026rdquo; command prints the value of the \u0026ldquo;title\u0026rdquo; variable. Hugo pulls it from the front matter in the Markdown file.\nThe \u0026ldquo;end\u0026rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds \u0026ldquo;end.\u0026rdquo; Everything between the \u0026ldquo;range\u0026rdquo; and \u0026ldquo;end\u0026rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.\nIt\u0026rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.\nBuild the web site and then verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 94 Sep 29 22:23 public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/second/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let\u0026rsquo;s take a moment to appreciate what we\u0026rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you\u0026rsquo;ve learned everything you need to know to build a theme. All that\u0026rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.\nAnd, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don\u0026rsquo;t worry, though, that\u0026rsquo;s all to come.\nAdd Content to the Posts #  We\u0026rsquo;re working with posts, which are in the content/post/ directory. That means that their section is \u0026ldquo;post\u0026rdquo; (and if we don\u0026rsquo;t do something weird, their type is also \u0026ldquo;post\u0026rdquo;).\nHugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can\u0026rsquo;t find one, then it will look in the _default/ directory. There are some twists that we\u0026rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.\nNow that we know the search rule, let\u0026rsquo;s see what we actually have available:\n$ find themes/zafta -name single.html | xargs ls -l -rw-r--r-- 1 quoha staff 132 Sep 29 17:31 themes/zafta/layouts/_default/single.html We could create a new template, post/single.html, or change the default. Since we don\u0026rsquo;t know of any other content types, let\u0026rsquo;s start with updating the default.\nRemember, any content that we haven\u0026rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we\u0026rsquo;re going to be adding different types of content and we\u0026rsquo;re going to end up undoing some of the changes we\u0026rsquo;ve made. It\u0026rsquo;s good because we\u0026rsquo;ll be able to see immediate results. It\u0026rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we\u0026rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we\u0026rsquo;ll accept the cost and proceed.\nPlease see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you\u0026rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That\u0026rsquo;s a refreshing amount of joy right there.\nUpdate the Template File #  $ vi themes/zafta/layouts/_default/single.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Build the web site and verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 94 Sep 29 22:40 public/index.html -rw-r--r-- 1 quoha staff 125 Sep 29 22:40 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:40 public/post/index.html -rw-r--r-- 1 quoha staff 128 Sep 29 22:40 public/post/second/index.html $ cat public/post/first/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;first\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;my first post\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ cat public/post/second/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;second\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;my second post\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Notice that the posts now have content. You can go to localhost:1313/post/first to verify.\nLinking to Content #  The posts are on the home page. Let\u0026rsquo;s add a link from there to the post. Since this is the home page, we\u0026rsquo;ll update its template.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; {{ range first 10 .Data.Pages }} \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Build the web site and verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 149 Sep 29 22:44 public/index.html -rw-r--r-- 1 quoha staff 125 Sep 29 22:44 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:44 public/post/index.html -rw-r--r-- 1 quoha staff 128 Sep 29 22:44 public/post/second/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;/post/second/\u0026quot;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;/post/first/\u0026quot;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Create a Post Listing #  We have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let\u0026rsquo;s make it show a list of all posts (not just the first ten).\nWe need to decide which template to update. This will be a listing, so it should be a list template. Let\u0026rsquo;s take a quick look and see which list templates are available.\n$ find themes/zafta -name list.html | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don\u0026rsquo;t have multiple content types, so let\u0026rsquo;s stay consistent and update the default list template.\nCreating Top Level Pages #  Let\u0026rsquo;s add an \u0026ldquo;about\u0026rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).\nThe default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let\u0026rsquo;s verify that by creating an \u0026ldquo;about\u0026rdquo; page at the top level:\n$ vi content/about.md +++ title = \u0026quot;about\u0026quot; description = \u0026quot;about this site\u0026quot; date = \u0026quot;2014-09-27\u0026quot; slug = \u0026quot;about time\u0026quot; +++ ## about us i'm speechless :wq Generate the web site and verify the results.\n$ find public -name '*.html' | xargs ls -l -rw-rw-r-- 1 mdhender staff 334 Sep 27 15:08 public/about-time/index.html -rw-rw-r-- 1 mdhender staff 527 Sep 27 15:08 public/index.html -rw-rw-r-- 1 mdhender staff 358 Sep 27 15:08 public/post/first-post/index.html -rw-rw-r-- 1 mdhender staff 0 Sep 27 15:08 public/post/index.html -rw-rw-r-- 1 mdhender staff 342 Sep 27 15:08 public/post/second-post/index.html Notice that the page wasn\u0026rsquo;t created at the top level. It was created in a sub-directory named \u0026lsquo;about-time/\u0026rsquo;. That name came from our slug. Hugo will use the slug to name the generated content. It\u0026rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.\nOne other thing. Take a look at the home page.\n$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/theme/\u0026quot;\u0026gt;creating a new theme\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/about-time/\u0026quot;\u0026gt;about\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/second-post/\u0026quot;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/first-post/\u0026quot;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;script\u0026gt;document.write('\u0026lt;script src=\u0026quot;http://' + (location.host || 'localhost').split(':')[0] + ':1313/livereload.js?mindelay=10\u0026quot;\u0026gt;\u0026lt;/' + 'script\u0026gt;')\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the \u0026ldquo;about\u0026rdquo; link is listed with the posts? That\u0026rsquo;s not desirable, so let\u0026rsquo;s change that first.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; {{ range first 10 .Data.Pages }} {{ if eq .Type \u0026quot;post\u0026quot;}} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; {{ range .Data.Pages }} {{ if eq .Type \u0026quot;page\u0026quot; }} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.\nBut, that about page still renders to about-time/index.html.\n$ find public -name '*.html' | xargs ls -l -rw-rw-r-- 1 mdhender staff 334 Sep 27 15:33 public/about-time/index.html -rw-rw-r-- 1 mdhender staff 645 Sep 27 15:33 public/index.html -rw-rw-r-- 1 mdhender staff 358 Sep 27 15:33 public/post/first-post/index.html -rw-rw-r-- 1 mdhender staff 0 Sep 27 15:33 public/post/index.html -rw-rw-r-- 1 mdhender staff 342 Sep 27 15:33 public/post/second-post/index.html Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let\u0026rsquo;s do it the hard way and change the permalink in the configuration file.\n$ vi config.toml [permalinks] page = \u0026quot;/:title/\u0026quot; about = \u0026quot;/:filename/\u0026quot; Generate the web site and verify that this didn\u0026rsquo;t work. Hugo lets \u0026ldquo;slug\u0026rdquo; or \u0026ldquo;URL\u0026rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.\nSharing Templates #  If you\u0026rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn\u0026rsquo;t. That\u0026rsquo;s because we didn\u0026rsquo;t put the title in the home page\u0026rsquo;s template (layouts/index.html). That\u0026rsquo;s an easy thing to do, but let\u0026rsquo;s look at a different option.\nWe can put the common bits into a shared template that\u0026rsquo;s stored in the themes/zafta/layouts/partials/ directory.\nCreate the Header and Footer Partials #  In Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme\u0026rsquo;s presentation.\n$ vi themes/zafta/layouts/partials/header.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; :wq $ vi themes/zafta/layouts/partials/footer.html \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq Update the Home Page Template to Use the Partials #  The most noticeable difference between a template call and a partials call is the lack of path:\n{{ template \u0026quot;theme/partials/header.html\u0026quot; . }} versus\n{{ partial \u0026quot;header.html\u0026quot; . }} Both pass in the context.\nLet\u0026rsquo;s change the home page template to use these new partials.\n$ vi themes/zafta/layouts/index.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; {{ range first 10 .Data.Pages }} {{ if eq .Type \u0026quot;post\u0026quot;}} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; {{ range .Data.Pages }} {{ if or (eq .Type \u0026quot;page\u0026quot;) (eq .Type \u0026quot;about\u0026quot;) }} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Generate the web site and verify the results. The title on the home page is now \u0026ldquo;your title here\u0026rdquo;, which comes from the \u0026ldquo;title\u0026rdquo; variable in the config.toml file.\nUpdate the Default Single Template to Use the Partials #  $ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.\nAdd “Date Published” to Posts #  It\u0026rsquo;s common to have posts display the date that they were written or published, so let\u0026rsquo;s add that. The front matter of our posts has a variable named \u0026ldquo;date.\u0026rdquo; It\u0026rsquo;s usually the date the content was created, but let\u0026rsquo;s pretend that\u0026rsquo;s the value we want to display.\nAdd “Date Published” to the Template #  We\u0026rsquo;ll start by updating the template used to render the posts. The template code will look like:\n{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }} Posts use the default single template, so we\u0026rsquo;ll change that file.\n$ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }}\u0026lt;/h2\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Generate the web site and verify the results. The posts now have the date displayed in them. There\u0026rsquo;s a problem, though. The \u0026ldquo;about\u0026rdquo; page also has the date displayed.\nAs usual, there are a couple of ways to make the date display only on posts. We could do an \u0026ldquo;if\u0026rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.\nThe \u0026ldquo;if\u0026rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of \u0026ldquo;code for today,\u0026rdquo; too.\nLet\u0026rsquo;s assume, though, that we\u0026rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we\u0026rsquo;re going to create a section template.\nLet\u0026rsquo;s restore the default single template before we forget.\n$ mkdir themes/zafta/layouts/post $ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Now we\u0026rsquo;ll update the post\u0026rsquo;s version of the single template. If you remember Hugo\u0026rsquo;s rules, the template engine will use this version over the default.\n$ vi themes/zafta/layouts/post/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }}\u0026lt;/h2\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn\u0026rsquo;t.\nDon\u0026rsquo;t Repeat Yourself #  DRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you\u0026rsquo;re figuring that out, accept that you\u0026rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it\u0026rsquo;s okay to delay splitting up a template.\n"});index.add({'id':4,'href':'/posts/migrate-from-jekyll/','title':"Migrate to Hugo from Jekyll",'section':"Blog",'content':"Move static content to static #  Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n▾ \u0026lt;root\u0026gt;/ ▾ images/ logo.png  should become\n▾ \u0026lt;root\u0026gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.\nCreate your Hugo configuration file #  Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the Hugo configuration documentation for details.\nSet your configuration publish folder to _site #  The default is for Jekyll to publish to _site and for Hugo to publish to public. If, like me, you have _site mapped to a git submodule on the gh-pages branch, you\u0026rsquo;ll want to do one of two alternatives:\n  Change your submodule to point to map gh-pages to public instead of _site (recommended).\n git submodule deinit _site git rm _site git submodule add -b gh-pages git@github.com:your-username/your-repo.git public    Or, change the Hugo configuration to use _site instead of public.\n { .. \u0026quot;publishdir\u0026quot;: \u0026quot;_site\u0026quot;, .. }    Convert Jekyll templates to Hugo templates #  That\u0026rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to Jekyll\u0026rsquo;s template documentation if you need to refresh your memory on how you built your blog and Hugo\u0026rsquo;s template to learn Hugo\u0026rsquo;s way.\nAs a single reference data point, converting my templates for heyitsalex.net took me no more than a few hours.\nConvert Jekyll plugins to Hugo shortcodes #  Jekyll has plugins; Hugo has shortcodes. It\u0026rsquo;s fairly trivial to do a port.\nImplementation #  As an example, I was using a custom image_tag plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.\nJekyll\u0026rsquo;s plugin:\nmodule Jekyll class ImageTag \u0026lt; Liquid::Tag @url = nil @caption = nil @class = nil @link = nil // Patterns IMAGE_URL_WITH_CLASS_AND_CAPTION = IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;(\\s+)-\u0026gt;((https?:\\/\\/|\\/)(\\S+))(\\s*)/i IMAGE_URL_WITH_CAPTION = /((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;/i IMAGE_URL_WITH_CLASS = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))/i IMAGE_URL = /((https?:\\/\\/|\\/)(\\S+))/i def initialize(tag_name, markup, tokens) super if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK @class = $1 @url = $3 @caption = $7 @link = $9 elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION @class = $1 @url = $3 @caption = $7 elsif markup =~ IMAGE_URL_WITH_CAPTION @url = $1 @caption = $5 elsif markup =~ IMAGE_URL_WITH_CLASS @class = $1 @url = $3 elsif markup =~ IMAGE_URL @url = $1 end end def render(context) if @class source = \u0026quot;\u0026lt;figure class='#{@class}'\u0026gt;\u0026quot; else source = \u0026quot;\u0026lt;figure\u0026gt;\u0026quot; end if @link source += \u0026quot;\u0026lt;a href=\\\u0026quot;#{@link}\\\u0026quot;\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;img src=\\\u0026quot;#{@url}\\\u0026quot;\u0026gt;\u0026quot; if @link source += \u0026quot;\u0026lt;/a\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;figcaption\u0026gt;#{@caption}\u0026lt;/figcaption\u0026gt;\u0026quot; if @caption source += \u0026quot;\u0026lt;/figure\u0026gt;\u0026quot; source end end end Liquid::Template.register_tag('image', Jekyll::ImageTag)  is written as this Hugo shortcode:\n\u0026lt;!-- image --\u0026gt; \u0026lt;figure {{ with .Get \u0026quot;class\u0026quot; }}class=\u0026quot;{{.}}\u0026quot;{{ end }}\u0026gt; {{ with .Get \u0026quot;link\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt;{{ end }} \u0026lt;img src=\u0026quot;{{ .Get \u0026quot;src\u0026quot; }}\u0026quot; {{ if or (.Get \u0026quot;alt\u0026quot;) (.Get \u0026quot;caption\u0026quot;) }}alt=\u0026quot;{{ with .Get \u0026quot;alt\u0026quot;}}{{.}}{{else}}{{ .Get \u0026quot;caption\u0026quot; }}{{ end }}\u0026quot;{{ end }} /\u0026gt; {{ if .Get \u0026quot;link\u0026quot;}}\u0026lt;/a\u0026gt;{{ end }} {{ if or (or (.Get \u0026quot;title\u0026quot;) (.Get \u0026quot;caption\u0026quot;)) (.Get \u0026quot;attr\u0026quot;)}} \u0026lt;figcaption\u0026gt;{{ if isset .Params \u0026quot;title\u0026quot; }} {{ .Get \u0026quot;title\u0026quot; }}{{ end }} {{ if or (.Get \u0026quot;caption\u0026quot;) (.Get \u0026quot;attr\u0026quot;)}}\u0026lt;p\u0026gt; {{ .Get \u0026quot;caption\u0026quot; }} {{ with .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt; {{ end }} {{ .Get \u0026quot;attr\u0026quot; }} {{ if .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;/a\u0026gt; {{ end }} \u0026lt;/p\u0026gt; {{ end }} \u0026lt;/figcaption\u0026gt; {{ end }} \u0026lt;/figure\u0026gt; \u0026lt;!-- image --\u0026gt;  Usage #  I simply changed:\n{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg \u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were \u0026quot;having fun\u0026quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; -\u0026gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %}  to this (this example uses a slightly extended version named fig, different than the built-in figure):\n{{% fig class=\u0026quot;full\u0026quot; src=\u0026quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg\u0026quot; title=\u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; link=\u0026quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/\u0026quot; %}}  As a bonus, the shortcode named parameters are, arguably, more readable.\nFinishing touches #  Fix content #  Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that hugo server --watch is your friend. Test your changes and fix errors as needed.\nClean up #  You\u0026rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn\u0026rsquo;t used, delete it.\nA practical example in a diff #   Hey, it\u0026rsquo;s Alex was migrated in less than a father-with-kids day from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this diff.\n"});index.add({'id':5,'href':'/docs/panel/connect/','title':"Connexion et déconnexion",'section':"Le Panel",'content':"Se connecter ou se déconnecter du Panel #  Pour modifier le site internet, vous avez besoin de vous connecter au Panel.\nSe connecter au Panel #  Pour vous connecter au panel, vous devez vous rendre à l’adresse : https://www.r22.fr/panel/ avec votre navigateur.\nUn écran de connexion s’affiche, avec un formulaire. Dans les deux champs de celui-ci, renseignez l’email et le mot de passe de votre compte utilisateur·ice puis cliquez sur bouton login. Vous pouvez, en plus, cocher une case pour demander au site internet de vos garder en ligne le plus longtemps possible.\n  Se déconnecter du Panel #  Pour vous déconnecter du Panel, allez sur le menu déroulant représenté par un bouton hamburger. Dans la liste d’options affichées, vous devez cliquer sur le bouton se déconnecter en bas de la liste pour vous déconnecter du Panel.\n "});index.add({'id':6,'href':'/docs/glossaire/','title':"Glossaire",'section':"Docs",'content':"Glossaire #  Actualités #  Les actualités correspondents aux actualités des antennes et auteur·rices en dehors du site de la R22 Tout-monde. Elles permettent aux auditeur·trices de ne pas perdre de la fil de ses antennes préférées mais aussi de rencontrer celles et ceux qui font la radio au quotidien.\n Ancres #  Ce sont des marqueurs temporels que l\u0026rsquo;on peut situer dans le player d\u0026rsquo;un son afin d\u0026rsquo;indiquer exactement le contenu d\u0026rsquo;un passage à un moment particulier. Par exemple, si telle personne parle à 23min54sec il sera possible de le notifier dans le son. On peut aussi noter si l\u0026rsquo;on y parle de sujet en particulier, si c\u0026rsquo;est le moment des questions avec le publique ou si l\u0026rsquo;on évoque une réfèrence précise. L\u0026rsquo;usage des ancres est libre. Voir la page Publication pour savoir comment les ajouter.\n Antennes #  Les antennes sont des ensembles (associations, collectifs, artistes, chercheurs, structures, lieux, projets…) à l’origine de publications. Elles sont des contributrices, elles ont des pages Antennes et elles accessibles par la recherche.\n Auteur·ice #  Les auteur·ices sont les personnes qui ont réalisé ou contribué à la réalisation d\u0026rsquo;un son. Ils et elles ont des pages dédiées ici. Pour savoir comment créer une page Auteur.ice, voir la page correspondante. Il est conseillé de créer une page pour chaque nouvel.le auteur.ice sur la radio.\n Collection #  Ce sont des publications qui rassemblent plusieur car sont liés (pris au même évènement par exemple, dans une continuité). Format : chaque son a son texte.\n Explorations #  La page Exploration permet de chercher au sein du catalogue grâce à des filtres spécifiques, et des combinaisons de ceux-ci.\n Focus #  Ce sont des articles réalisés par l’équipe de publication, les antennes, ou les « contributeurs libres » qui mettent en avant certaines parties publications, auteur·ice·s / antennes et programmes. Ils travaillent à sélectionner le contenu marquant de la radio, le commentent et le mettent en contexte, en traversant ce qui à été publié. Ils peuvent également être des « billets d\u0026rsquo;humeur ». Ils permettent de donner une “direction” éditoriale au contenu.\n Highlight / Mise en avant #  Ce sont des contenus de la timeline qui sont placés au sein de la une; avec une plus grande visibilité. Elles sont soumises au rythme. Au sein des mises en avant, on retrouve des inclusions. Ce sont des publications incluent à la mise en avant qui sont présentée avec elle, dans un format minimal.\n Liens externes #  Les liens externes renvoient vers des pages à l\u0026rsquo;exterieur du site de la R22 Tout-monde.\n Liens internes #  Les liens externes renvoient vers des pages à l\u0026rsquo;intérieur du site de la R22 Tout-monde. Pour savoir comment les écrire, aller dans la page Raccourcis.\n Manchette #  Ce sont des contenus (antennes, publications simple, programmes, collections, focus…) qui sont épingés pendant un temps au sommet de la une. C\u0026rsquo;est l\u0026rsquo;équipe éditorial de la R22 Tout-monde qui se charge des les publier mais si vous souhaitez mettre en avant un contenu particulier, il est tout à fait possible d\u0026rsquo;en la faire une demande à l\u0026rsquo;adresse : radio@r22.fr\n Playlist #  C\u0026rsquo;est un format particulier de publication. Ce sont plusieurs sons réunis sous un seul texte.\n Programme #  Les programmes sont des axes éditoriaux liés à des antennes. Ils peuvent être liés à des thématiques spécifiques, des calendriers d’émissions, des événements récurrents, etc. Idéalement, ils proposent un certain nombre de contributions, qui peuvent être récurrents, sur un thème particulier.\n Publication #  On parle de publications pour les publications de sons. Elles peuvent être simples ou multiples, c\u0026rsquo;est à dire qu\u0026rsquo;elles comportent plusieurs sons. Les publications multiples peuvent être des collections ou des playlists. (link: https://r22.fr/docs/pulbication/comprendre-les-publications-collections-playlists text: Cliquer ici pour en savoir plus.) et (link: https://r22.fr/docs/construction/mettre-en-ligne-une-contribution text: ici pour suivre le tutoriel de mise en ligne).\n Réliées #  Les pubilcations reliées sont des publications qui font échos à une publication. Elles apparaissent en bas de chaque publication. Elles sont reliées par les tags.\n Slider #  Un slider ou carroussel d\u0026rsquo;images est une manière d\u0026rsquo;afficher plusieurs images en diaporama au sien d\u0026rsquo;une publication. Rendez-vous dans (link: https://r22.fr/docs/construction/mettre-en-ligne-une-contribution text: le tutoriel de mise en ligne d\u0026rsquo;une publication) pour savoir comment en faire.\n Tag #  Ce sont des mots clés qui permettent de résumés le contenu d\u0026rsquo;une publication. Ils est conseillé d\u0026rsquo;en mettre autour de cinq par publications. Les tags ne sont pas neutres et le choix de ceux-ci racontent quelque chose. Les tags sont également réducteurs et ne peuvent pas toujours témoigner de la complexité d\u0026rsquo;un sujet abordée. Il faut donc les choisir avec précisions car ils permettent aussi d\u0026rsquo;associer les publications entre elles.\n Timeline #  La timeline est composé de l\u0026rsquo;ensemble des unes du site. Elle est visible page après page sur la page d\u0026rsquo;acceuils et contient toutes les publications par ordre chronologique.\n Tipee #  Tipee est une plateforme de collecte de dons. On peut y soutenir la R22 Tout-monde à partir de 1euros par mois. Il est fortement conseillé d\u0026rsquo;inviter votre réseau à la faire à cette adresse : https://fr.tipeee.com/r22-tout-monde\n Une #  C\u0026rsquo;est le nom qui est donnée à la page d\u0026rsquo;acceuil.\n Webradio #  C\u0026rsquo;est ainsi que l\u0026rsquo;on nomme la R22 Tout-monde. C\u0026rsquo;est comme une vrai radio sauf que l\u0026rsquo;on est pas toujours en direct et pour le moment absent des ondes FM. Pour en savoir plus sur l\u0026rsquo;émergence des webradios et du podcast, nous vous conseillons de lire cet article introductif sur le site de Syntone.\n"});index.add({'id':7,'href':'/docs/charte-graphique/logotype/','title':"Logotype",'section':"Charte graphique",'content':".figure_cartouche{ border: 1px solid #eee; text-align: center; padding: 1em; width: 100% !important; } .cartouche{ width: 200px !important; margin-right: 1em; } .couleur{ width: 1em; height: 1em; display: inline-block; vertical-align: middle; margin-right: 0.5em; } .couleur--circle{ border-radius: 1em; } .couleur--rectangle{ border-radius: 0.1em; } .couleur--second{ margin-left: 1em; } .couleur--blanc{ background-color: #ffffff; border: 1px inset #eee; }  Logotype #  Cette section présente le logotype de la r22, ses formes utilisations, couleurs et usages. Ainsi que les différentes conditions sous lesquelles il peut être utilisé.\nLe logo de la r22 à été dessiné par Pierre Tandille. Il existe ici dans une version simplifié, sans son cadre rouge. Le logo est utilisé majoritairement en positif (rouge majeur) et en blanc. Il existe également en plusieurs autres couleurs.\n  Zone de protection #   Le logo de la r22 peut être disposé librement en respectant la zone de protection. L’espace minimum est représenté par la hauteur et la largeur (fût) du « R ».\nAucun élément graphique ne doit franchir la zone de protection du logotype. Cette zone libre doit être maintenue, pour en assurer un bon positionnement et une bonne lecture.   Couleurs #  Les couleurs présentées ici sont les seules à pouvoir être utilisées avec le logotype. Il est interdit de l’employer avec d’autres couleurs, même celles décrites à la suite de la charte. Pour connaître le détail des couleurs, reportez-vous à la section correspondante.\nSi vous avez des doutes concernant la couleur à choisir pour le logotype, utilisez la version classique.  Les thèmes demandent des couleurs spécifiques, n’utilisez pas un logotype d’une autre couleur que celle demandée par son thème !  Pour plus d’informations sur les thèmes et leur conditions d’utilisations, reportez-vous à la section correspondante.\n  Rouge Tonique    Classique La version générale du logo. À privilégier dans les documents de communication.     Rouge Mediante    Médiante Une alternative de la version générale. À employer dans les situations où le rouge majeure est trop fort.     Vert Majeure    Vert À employer uniquement au sein du thème vert.     Nuit Majeure    Nuit À utiliser uniquement si la version labeur est trop faible. Pour des supports et impressions en couleurs.     Nuit Sensible    Nuit sensible Version grisée à utiliser pour les supports et impressions en couleurs.     Labeur    Labeur La version noir générale, à utiliser pour les supports et impressions en couleur, sur fond clair.     Noir 45%    Gris neutre Version grisée à utiliser pour les supports et impressions en noir \u0026amp; blanc.     Noir 100%    Noir À utiliser pour les supports et impressions en noir \u0026amp; blanc, sur fond clair.    Les cartouches #   Le logotype de la r22 peut être encapsulé au sein d’un rectangle de couleur — cartouche. Ses dimensions correspondent à celle de la zone de protection du logotype.La cartouche possède également sa propre zone de protection.\nCartouche classique #  La version classique de la capsule, en rouge Majeure, à privilégier dans les documents de communication.\n Rouge Tonique  Blanc  Cartouche Rouge #  Cette capsule est à utiliser uniquement au sein du thème rouge, ou dans des univers à tendance rouge.\n Rouge Mineure  Labeur  Cartouche Verte #  Cette capsule est l’équivalente de la capsule classique, au sein de l’univers vert.\n Vert Majeure  Blanc  Cartouche Nuit #  La capsules au sein de l’univers sombre. À utiliser principalement en numérique.\n Nuit Majeure  Vert Mineure   L\u0026rsquo;Icon #   Le logo peut se réduire à une icon pour certaines occasions. C’est l’identifiant le plus fin de la r22. Il communique d’une façon simple, épaisse et amicale. Il est visuellement distinct du logo, mais lui est soumis dans son concept et son application.\nL’icon ne peut remplacer le logo que lors de cas très particuliers. Par exemple, quand il n’est pas possible d’afficher le logo, par manque de place. Où en signature très fine de certains documents.   Les tailles minimales #  Par soucis de lisibilité, n’employez pas de tailles plus petites que celle-ci.\n20 mm • 96px  24 mm • 128px  8 mm • 36px   Utilisations interdites #  Ne pas faire     Nom Description     Modification des couleurs Ne modifiez pas les couleurs du logotype, ne l’employez pas avec d’autres combinaisons que celle présentées dans la charte.   Déformation du logotype Ne déformez pas le logotype. Ne changez pas sa taille sans en respectez l’homothétie.   Orientation du logotype Ne modifiez pas l’orientation du logotype, il doit toujours être à l’horizontale.   Ancienne version Sauf si la création du document utilisé est antérieure à la refonte du site internet, n’employez pas le logotype avec un cadre rouge.   Mélange de couleurs Ne mélangez pas les couleurs. Employez de préférence la version du logotype qui correspond au thème choisi.   Modifier le logotype Ne modifiez, ou ne transformez pas le logotype. Il doit, en tout occasion, rester conforme à sa forme actuelle.     Téléchargement #  Vous pouvez télécharger les fichiers du logotype. Il y est présent en toutes ses couleurs, ainsi que sous la forme de cartouche.\nTélécharger l'ensemble  Pour des besoins spécifiques, voici ses différent formats :\n .png  .tiff  .svg  .eps  "});index.add({'id':8,'href':'/docs/charte-graphique/couleurs/nuancier/','title':"Nuancier",'section':"Couleurs",'content':"Nuanciers #  Cette section présente en détail toutes les couleurs de la radio. Elle répertorie ainsi les quatre grands groupes de couleurs, rouges, verts, noirs et nuits. Les références des couleurs sont données en hex et en rgb.\n Rouge Radio #  Pour la refonte, le rouge R22 classique est revu et ré-haussé. C’est la couleur primaire de la radio, et est employée majoritairement dans son identité.\nLa variation tonique est celle d’emploi prioritaire. C’est elle qui souligne les titre et colore les boutons. Ses variations servent à renforcer ou rabaisser les tons aux besoins des compositions.\nRouge Tonique\nP HEX : #FF3C33\nRGB : 255, 60, 51\n Rouge Majeure\n HEX : #FF5C55\nRGB : 255, 92, 85\n Rouge Médiante\n HEX : #FA8F8A\nRGB : 250, 143, 138\n Rouge Sensible\n HEX : #FAC4C1\nRGB : 250, 196, 193\n  Rouge Mineure\n HEX : #FFE9E8\nRGB : 255, 233, 232\n Rouge Active\n HEX : #E60707\nRGB : 230, 7, 7\n Rouge Sombre\n HEX : #D62921\nRGB : 214, 41, 33\n Rouge Mi-Sombre\n HEX : #DE5157\nRGB : 222, 81, 87\n   Vert « Tout Monde » #  Le vert agit comme couleur secondaire dans l’identité de la r22. C’est également la couleur complémentaire du rouge. Ses variations majeure et mineure sont celles d’emploi prioritaire.\nVert Tonique\nP HEX : #00FF92\nRGB : 0, 255, 146\n Vert Majeure\n HEX : #0ADC82\nRGB : 10, 222, 130\n Vert Médiante\n HEX : #5EDA7E\nRGB : 94, 218, 126\n Vert Sensible\n HEX : #AFFEC7\nRGB : 175, 254, 199\n  Vert Mineure\nP HEX : #C4FFE6\nRGB : 196, 255, 230\n Vert Active\n HEX : #73FFC3\nRGB : 115, 255, 195\n     Noir \u0026amp; gris #  La couleur de labeur est utilisée comme couleur du texte. Ces couleurs soulignentles aspects inactifs ou désactivés de différents éléments.\nLabeur\nP HEX : #505155\nRGB : 80, 81, 85\n Noir Médiante\n HEX : #9B9B9B\nRGB : 155, 155, 155\n Noir Sensible\n HEX : #D6D6D6\nRGB : 214, 214, 214\n Noir Mineure\n HEX : #EEEEEE\nRGB : 238, 238, 238\n   Bleu nuit #  La couleur nuit et ses variations indiquent l’état de concentration / central de différents éléments. Elles permettent d’augmenter le contraste d’un élément dans la composition.\nNuit Majeure\n HEX : #353E56\nRGB : 53, 62, 86\n Nuit Médiante\n HEX : #677394\nRGB : 103, 115, 148\n Nuit Sensible\n HEX : #C5C8D0\nRGB : 197, 200, 208\n Nuit Mineure\n HEX : #F1F1F4\nRGB : 241, 241, 244\n  .couleur { width: 6em; height: 6em; display: inline-block; vertical-align: baseline; margin-right: 0.5em; border-radius: 3em; margin-bottom: 1em; text-align:center; line-height: 6em; color: white; font-weight: 900; }  "});index.add({'id':9,'href':'/docs/contenu/pages/','title':"Pages et publications",'section':"Le Contenu",'content':"Pages et publications #  Toutes les interactions que vous aurez avec le contenu du site internet au travers du Panel se feront grâce aux pages.\nChaque page comporte des possibilités d\u0026rsquo;édition différentes, liée à son importance dans la hiérarchie du site internet. Cette section détaille les informations essentielles et communes à toutes les pages du site internet.\nPuisque Kirby est un flat file C.M.S 1, tout le contenu est stocké dans des fichiers et des dossiers contenu au sein du dossier content, la racine du site. Chaque dossier correspond à une page du site internet au sens propre, contient ses éléments de contenu (comme des fichiers images), et est accessible depuis son propre URL.\nChaque dossier peut contenir des sous-dossiers, qui deviennent des sous-pages, etc. Ils contiennent eux-mêmes des fichiers textes et des images, et peuvent également contenir des sous-pages, et ainsi augmenter l\u0026rsquo;arborescence.\nUne page contenant des sous-pages est appellée une page parente, et ses sous-pages sont des pages enfants. Dans cette logique, une page peut être parente de plusieurs sous-pages et également enfant d\u0026rsquo;une autre page.\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph LR 0[Racine] 0--Parent--1[Antennes] 1--Parent--2[Antenne] 2--Parent--5[Programme] 2--Parent--6[Programme] 1--Enfant--0 2--Enfant--1 5--Enfant--2 6--Enfant--2  Statut Les status des pages vous permettent plus de contrôle sur le processus de publication. Chaque statut défini le comportement de la page au sein du site.\nEn savoir plus   Sections de pages Au sein du Panel, vous rencontrerez réguilièrement des sections regroupant différentes pages. Ce sont les sections de pages.\nEn savoir plus     Créer des pages Dans le Panel, vous interagissez avec des pages. Il est important de comprendre comment les créer et les organiser.\nEn savoir plus   Modifier et supprimer des pages Vous allez devoir définir les paramètres essentiels à la bonne tenue des pages dans le site internet.\nEn savoir plus     Processus de travail collaboratif #  Kirby possède quelques gardes-fou et systèmes de travail collaboratif à connaître pour utiliser le C.M.S. le mieux possible. Ainsi, lorsque vous travaillez sur le Panel, vos changement sont sauvegardés et **la page est vérouillée. Et lorsque vous vous connectez, vous pouvez voir les changement en cours et ce qui se fait actuellement.\nEn savoir plus    un flat file C.M.S ne s\u0026rsquo;appuie pas sur une base de données pour ordonner le contenu du site internet, mais plutôt sur un ensemble de fichiers texte ordonnés dans une arborescence. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':10,'href':'/docs/charte-graphique/typographies/polices/','title':"Polices de caractères",'section':"Typographies",'content':"Les polices de caractères #  Les typographies Al Kashi et Chivo sont utilisées pour l’identité de la r22. Elles s’utilisent autant dans l’interface de la radio que dans la communication web et imprimée.\n La Al Kashi est la typographie utilisée pour le titrage. Elle ne possède qu’une seule graisse et pas d’italique. La Chivo est la typographie de labeur de la radio, elle s’emploie dans toutes ses graisses, avec ses italiques.   ABCDEFGHIJKLMNOPQRSTUVWXYZ \u0026é»’(§è!çà)-123456789?!.,:@+ — Al Kashi Regular\n ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz \u0026é»’(§è!çà)- 123456789  ?! . , : @+ — Chivo Light\n ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz \u0026é»’(§è!çà)- 123456789  ?! . , : @+ — Chivo Light Italic\n ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz \u0026é»’(§è!çà)- 123456789  ?! . , : @+ — Chivo Regular\n ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz \u0026amp;é»’(§è!çà)- 123456789 \u0026gt; ?! . , : @+\n— Chivo Regular Italic\n ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz \u0026amp;é»’(§è!çà)- 123456789 \u0026gt; ?! . , : @+\n— Chivo Bold\n ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz \u0026amp;é»’(§è!çà)- 123456789 \u0026gt; ?! . , : @+\n— Chivo Bold Italic\n ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz \u0026amp;é»’(§è!çà)- 123456789 \u0026gt; ?! . , : @+\n— Chivo Extra Bold\n ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz \u0026amp;é»’(§è!çà)- 123456789 \u0026gt; ?! . , : @+\n— Chivo Extra Bold Italic\n Téléchargement #  Vous pouvez télécharger les typographies employées par la radio grâce aux boutons suivants :\nTélécharger l'ensemble  Pour des besoins précis, voici les téléchargements individuels :\n Télécharger la Al-Kashi  Télécharger la Chivo   @import \"/fonts/al_kashi/al_kashi.css\"; @import \"/fonts/chivo/chivo.css\";  "});index.add({'id':11,'href':'/docs/charte-graphique/typographies/composition/','title':"Composition générale",'section':"Typographies",'content':"Composition générale #  Le texte, dans l’identité de la r22, se compose autour de la publication. C’est la forme que prend la mise en ligne d’un son sur le site internet. Elle est composée d’un titre, d’un article, d’images, d’informations et de crédits.\nAu sein des documents de communication, la mise en forme du texte est similaire à la construction effective sur le site internet.  Le texte est, par ailleurs, souvent accompagné d’images, de liens \u0026amp; références et d’informations (biographies, crédits). Les pages suivantes présentent les différentes formes que prennent chacun des ces éléments.\n Titraille #  BERNARD HEIDSIECK, (1928-2014), PARTITION N — Chapô • Thêta Labeur Rouge Tonique\n Le titre est composé en Al Kashi, et est souligné d’un trait rouge tonique. Sa casse est uniquement en lettre capitale.\nC’est un élément très identifiant pour la radio. La Al Kashi est une typographie visuellement très forte, qui est utilisée depuis les début de projet. Elle permet de composer des titres commes des blocs, qui s’assemblent les uns sur les autres. Le soulignement renforce cet effet.\nLes titres doivent apparaître sur chaque document de communication, presque toujours en premier, sur le dessus.  Le choix de la taille d’un titre se fait en fonction du nombre de caractères. Plus il y a de caractères, plus la taille du titre sera petite. De manière générale, le titre ne prend pas beaucoup de place en largeur, pour accentuer l’effet d’empilement. Les césures sont autorisées dans les titres, notamment pour les mots long mais doivent être évitées si possible.\n Chapô #  Le texte est toujours accompagné d’un chapô. Il est placé entre le titre et le texte pour inciter à lire le document, il en précise le contenu, il en dévoile l’angle. Il permet de mettre du texte en emphase forte.\nDans L’Orientalisme. L’Orient créé par l’Occident (traduction française 1980), ouvrage qui a ouvert la porte à toute une relecture de la littérature et de l’esthétique européenne,Edward Saïd avait pour but de « repenser ce qui durant des siècles a été considéré comme un gouffre infranchissable séparant l’Est de l’Ouest »… — Chapô • Êta\nDans L’Orientalisme. L’Orient créé par l’Occident (traduction française 1980), ouvrage qui a ouvert la porte à toute une relecture de la littérature et de l’esthétique européenne,Edward Saïd avait pour but de « repenser ce qui durant des siècles a été considéré comme un gouffre infranchissable séparant l’Est de l’Ouest »… — Chapô • Thêta\nLabeur Noir médiante Vert majeure\n Il est composé en Al Kashi, sans soulignement, en capitales.\nSa taille varie entre deux phrases à deux paragraphes. Le choix entre ces variations s’effecture en fonction de la taille du texte, ou du document. Un chapô doit toujours donner l’impression de ne pas faire plus d’un quart de la taille d’un texte.  Certains mots d’un chapô peuvent être mis en italiques. Cependant, la Al Kashi ne possède pas d’italique, ainsi ils seront colorés une couleurs en dessous de la couleur du texte. Par exemple, pour un texte en labeur, les mots en italiques seront en noir médiante. Les tailles de chapô peuvent également servir à composer des sous-titres ou sur-titres.\n Paragraphes #  Les paragraphes et textes courants sont composés en Chivo, avec les graisses regluar, bold, et leurs italiques.\nArc \u0026 Flèche — En 2017, l’artiste visuelle brésilienne Ana Vaz sera en résidence à l’Espace Khiasma autour de sa trilogie Le Jaguar bleu, qui prend comme motif et symbole des îles à la fois réelles et imaginées pour fabuler de nouvelles formes de relations dans un monde hanté par l’imminence d’une ruine écologique. — Paragraphe • Kappa\nArc \u0026 Flèche — En 2017, l’artiste visuelle brésilienne Ana Vaz sera en résidence à l’Espace Khiasma autour de sa trilogie Le Jaguar bleu, qui prend comme motif et symbole des îles à la fois réelles et imaginées pour fabuler de nouvelles formes de relations dans un monde hanté par l’imminence d’une ruine écologique. — Paragraphe • Lambda\nArc \u0026 Flèche — En 2017, l’artiste visuelle brésilienne Ana Vaz sera en résidence à l’Espace Khiasma autour de sa trilogie Le Jaguar bleu, qui prend comme motif et symbole des îles à la fois réelles et imaginées pour fabuler de nouvelles formes de relations dans un monde hanté par l’imminence d’une ruine écologique. — Paragraphe • Nu\nLabeur Noir médiante Vert majeure\n Les graisses light et black ne sont pas employées dans le texte courant. Comme pour les chapôs, les italiques seront colorées une couleur en dessous de la couleur du texte.\nLes noms propres, noms de lieux ou mots d’intérêts peuvent être mis en bold et colorés en vert majeure. Ils font références aux liens sur le site internet. Pour les documents de communication, le choix de cette mise en relief est laissé libre.\nLe choix de la taille du paragraphe s’effectue en fonction du type de document, et de la taille du texte à composé. Chaque situation doit être étudiée pour trouver la taille idéale de composition.   Crédits #  Débat de Valérie Cabanes \u0026 Elizabeth Povinelli \u0026 Olivier Marboeuf \u0026Louis Henderson pour le programme : Geontopower : cartographie de la scène européenne de la critique du libéralisme tardif et pour l’antenne : Tout-monde.\n — Credit • Mu\u0026gt;\nNoir médiante\n Les crédits sont de courts paragraphes contenant des informations techniques, légales ou contextuelles.\nIls peuvent contenir, par exemple : les informations d’une publication : qui a enregistré, qui a monté/mixé, la date de l’enregistrement, le lieu de l’enregistrement, les partenaires, etc.\nLes crédits se composent en Chivo, avec les graisse light et blod.\nLes informations descriptives sont composées en light italique, et les noms, prénoms, définitions ou genres sont composés en bold. Les crédits sont presques toujours composés en noir médiante. Néanmoins, si le document le demande, ils peuvent être composé en labeur, ou en une couleur en dessous de la couleur de texte.\n Ligne de base #  Pour les documents de communication, les éléments graphiques et typographiques s’alignent sur une ligne de base de 15pt. La ligne de base permet aux espacements entre les éléments d’êtres consistants entre tous les documents.\n Les éléments s’alignent presques exclusivement à partir de la première ligne, sauf pour les titres, qui peuvent s’aligner sur la dernière ligne.  C’est la ligne de base de composition médiante. Pour des compositions plus petites, il est possible d’utiliser la ligne de base équivalent à l’interlignage de Mu, ainsi 13.5pt.\nAttention, seule la permière ligne d’un paragraphe d’un bloc de texte s’aligne sur la ligne de base. Son deuxièment paragraphe reste assujeti à l’interlignage du paragraphe. Voir par exemple l’alignement du deuxième paragraphe du bloc de texte en taille Mu ci-contre. Il reste aligné sur une ligne de base de 13.5 pt, qui est son interlignage.\n@import \"/fonts/al_kashi/al_kashi.css\"; @import \"/fonts/chivo/chivo.css\"; .figure_cartouche{ border:1px solid #eee; text-align:center; padding:1em; width:100% !important; } .cartouche{ width:200px !important; margin-right:1em; } .couleur{ width:1em; height:1em; display:inline-block; vertical-align:middle; margin-right:0.5em; } .couleur--circle{ border-radius:1em; } .couleur--rectangle{ border-radius:0.1em; } .couleur--second{ margin-left:1em; } .couleur--blanc{ background-color:#ffffff; border:1px inset #eee; } .h1 { box-shadow: inset 0 -5px 0 0 #FF3C33; line-height: 1.2; font-size: 3.125em; font-family: 'Al Kashi',sans-serif; font-weight: normal; display: inline; text-transform: uppercase; hyphens: auto; color: #505155; } .h1::after { margin-bottom: .8em; } .eta { font-family: 'Al Kashi',sans-serif; font-size: 1.25em; line-height: 1.5; color: #505155; } .theta { font-family: 'Al Kashi',sans-serif; font-size: 1em; line-height: 1.375; color: #505155; } .eta a, .theta a, .kappa a, .lambda a { color: #0ADC82; text-decoration: none; } .eta em, .theta em, .kappa em, .lambda em { font-style: normal; color: #9B9B9B; } .kappa { font-size: 1em; line-height: 1.5; font-weight: normal; letter-spacing: .01em; hyphens: auto; font-family: 'Chivo', sans-serif; color: #505155; } .lambda { font-size: .875em; line-height: 1.42857143; font-weight: normal; hyphens: auto; font-family: 'Chivo', sans-serif; color: #505155; } .nu { font-size: 10px; line-height: 1.5; color: #9B9B9B; font-weight: normal; font-family: 'Chivo', sans-serif; color: #505155; } .nu a { color: #505155; font-weight: 700; font-style: normal; border-bottom: 1px solid transparent; color: #505155; }  "});index.add({'id':12,'href':'/docs/charte-graphique/couleurs/compositions/','title':"Compositions",'section':"Couleurs",'content':"Compositions #  Les couleurs de la r22 dialoguent entre elles, et leurs relations suivent des régles précises. Cette section de la charte graphique met en évidence ces compositions colorées de la radio.\n Renforcements #  Chaque variation d’une couleur permet de renforcer ou de soutenir une couleur qui lui est proche. Les variations allant de majeure au mineure se suivent. Les variations tonique, active et sombre sont principalement employées pour de l’interaction.\n   Rouge Médiante\nRg. Mi-Sombre     Rouge Majeure\nRouge Tonique     Rouge Médiante\nRouge Majeure     Rouge Sensible\nRouge Médiante      Rouge Mineure\nRouge Sensible     Rouge Médiante\nRouge Active     Rouge Majeure\nRouge Sombre     Contrastes #  Pour la couleur secondaire, les soutiens fonctionnent plutôt en opposition. Des couleurs assez éloignées sont rapprochées pour créer des espaces colorés. Médiante et sensible contiennent plus de jaune, alors que le reste des couleurs est plus bleuté.\n   Vert active\nVert majeure     Vert tonique\nVert majeure     Vert sensible Vert tonique     Vert sensible Vert majeure      Vert sensible\nVert mineure       Actif et inactif #  Les couleurs noirs et nuits permettent d’indiquer l’état d’un élément. Les associations ci-dessus montrent les couleurs que peuvent prendre des objets en fonction qu’ils soient actif ou inactif, sélectionné ou non, objet de l’attention (focus) ou non.\n   Noir médiante\nLabeur     Noir sensible\nNoir médiante     Noir mineure\nNoir sensible     Noir mineure\nLabeur       Nuit mineure\nLabeur     Nuit médiante\nNuit majeure     \u0026lt;spanclass=\u0026quot;small_couleur small_couleur\u0026ndash;circle\u0026rdquo; style=\u0026quot;background-color: #505155;\u0026ldquo;\u0026gt;Labeur\nNuit majeure     Nuit mineure\nNuit sensible    Mélanges #  Certaines couleurs se répondent et dialoguent ensemble. Elles permettent d’accentuer et / ou de distinguer des éléments. Ces ensembles de rapport sont les associations les plus fréquentes et doivent être privilégiées lors de création d’éléments. Ce sont également ces mélanges qui composent les thèmes.\n   Vert active\nNuit Médiante     Vert mineure\nRouge tonique     Vert mineure\nNuit majeure     Vert sensible\nRouge Majeure       Rouge sensible\nNuit sensible     Rouge tonique\nLabeur     Rouge majeure\nNuit médiante     Rouge tonique\nNuit majeure    Couleurs du texte #  Lorsqu’un élément graphique, comme du texte ou une icon, apparaît au dessus d’un élément coloré, il doit utiliser les couleurs spécifiées ici. Elles sont choisies pour être claires et lisibles, lorsque confrontées à la couleur derrière elles.\nLes deux associations accompagnées de ce symboles ne doivent pas être choisies pour des informations importantes. En effet, elles peuvent être très peu lisibles pour des personnes atteintes de daltonisme.\nCertaines associations de couleurs ne seront plus lisibles à l’impression, à cause du ternissements des couleurs vives. Voir la section dédiées au CMJN pour plus d’informations.\nCouleurs #   R  Vert active\nNuit médiante   R  Rouge majeure\nVert mineure   R  Vert mineure\nNuit majeure   R  Rouge mineure\nRouge tonique     R  Vert sensible\nRouge majeure    R  Vert mineure\nBlanc\nLabeur    R  Rouge tonique\nNuit majeure\nBlanc     Noirs \u0026amp; nuit #   R  Labeur\nNoir mineure   R  Labeur\nNoir médiante   R  Nuit mineure\nNuit majeure   R  Nuit sensible\nNuit majeure     R  Nuit médiante\nNuit majeure    R  Nuit mineure\nNoir mineure\nLabeur    R  Nuit sensible\nNoir sensible\nLabeur    R  Nuit médiante\nNoir médiante\nLabeur      R  Nuit médiante\nNoir médiante\nBlanc    R  Labeur\nNuit majeure\nBlanc     .small_couleur { width: 1em; height: 1em; display: inline-block; vertical-align: middle; margin-right: 0.5em; } .small_couleur--circle { border-radius: 1em; } .small_couleur--rectangle { border-radius: 0.1em; } .small_couleur--second { margin-left: 1em; } .small_couleur--blanc { background-color: #ffffff; box-shadow: inset -1px -1px 0 0 #eee; } .boite_couleur { width: 6em; height: 6em; overflow: hidden; position: relative; margin-bottom: 1em; } .couleur { width: 6em; height: 6em; margin: 0; padding: 0; display: inline-block; vertical-align: middle; position: absolute; text-align:center; line-height: 6em; color: white; } .couleur--rectangle { border-radius: 0; } .couleur--second { margin: 0; line-height: 0; vertical-align: top; top: 0; margin-left: 2.5em; transform: rotate(45deg); width: 12em; height: 12em; position: absolute; } .couleur--blanc { background-color: #ffffff; border: 1px inset #eee; } .text { font-size: 4em; font-weight: 900; width: 1.5em; text-align: center; line-height: 1.5em; position: absolute; z-index: 2; margin: 0; top: 0; }  "});index.add({'id':13,'href':'/docs/charte-graphique/couleurs/','title':"Couleurs",'section':"Charte graphique",'content':"Couleurs #  Dans cette section de la charte graphique sont détaillées les couleurs de la radio. Vous y trouverez un nuancier avec l\u0026rsquo;ensemble des couleurs, ainsi que leurs références en RVB. Également, un guide exhaustif des différentes compositions réalisables avec celles-ci. Enfin, un précis de l\u0026rsquo;utilisation de ces couleurs en CMJN.\n Téléchargements #  Pour l\u0026rsquo;utilisation au sein de logiciels de création ou de mise en page, voici des nuanciers avec l\u0026rsquo;ensemble des couleurs de la radio :\n nuancier.ase  nuancier.ai   Nuancier Détail de toutes les couleurs de la radio.\nLa suite   Compositions Différents possibles de composition avec les couleurs.\nLa suite   Impression Guide de l’usage des couleurs en CMJN.\nLa suite    "});index.add({'id':14,'href':'/docs/panel/interface/','title':"Interface",'section':"Le Panel",'content':"Interface du Panel #  En elle-même, l\u0026rsquo;interface est assez intuitive. Elle ressemble à tout autre logiciel d\u0026rsquo;édition de contenu que vous avez déjà pu recontrer.\nToutefois, la présente documentation fait régulièrement référence à quelques éléments important de son interface, aussi, il est important de les connaître et de savoir les utiliser.\n Haut de page #  Header #  La barre d\u0026rsquo;en-tête noire, en haut du site internet, ou header, comporte des éléments de navigation importants du Panel.\n Le header du Panel, à gauche, le hamburger qui donne accès au menu déroulant, au centre, le chemin d\u0026rsquo;arborescence et à droite, la loupe donnant accès à la recherche.\nHamburger \u0026amp; Menu déroulant #  À gauche de celle-ci, vous trouverez le bouton hamburger qui vous permet d’accéder au menu déroulant du site. Ce menu liste les sections principales :\n    Bouton Description     Site Le contenu du site internet   Utilisateurs Les comptes utilisateurs du site   Paramètres Les paramètres du site internet   Votre compte La page du compte utilisateur que vous employez actuellement   Se déconnecter La possibilité de se déconnecter du Panel       Fil d\u0026rsquo;Ariane (Breadcrumb) #  Au centre du header est affiché le Fil d\u0026rsquo;Ariane, c\u0026rsquo;est à dire la liste des pages parentes1 à la page dans laquelle vous vous trouvez. Dit autrement, c’est le chemin des pages qui contiennent la page actuelle. Vous pouvez cliquer sur le nom d’une page pour vous y rendre.\nDans l\u0026rsquo;exemple suivant, on retrouve la racine du site, la page Antennes, l\u0026rsquo;antenne Afrotopiques et son programme Rencontres Afrotopiques.\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph LR 1[r22] 2[Antennes] 3[Afrotopiques] 4[Rencontres Afrotopiques] 1--Parente de-- 2 2--Parente de--3 3--Parente de--4 4--Enfant de--3 3--Enfant de--2 2--Enfant de--1  Recherche #  Le bouton en forme de loupe vous permet d’accéder à la recherche du Panel.\nGrâce à elle, vous pouvez rechercher des pages précises grâce à une liste de mot clés. Ainsi, vous pouvez accéder plus rapidement à des sections importantes du site internet. Elle est très pratique pour trouver des pages profondément enfouies dans l’arborescence du site.\nUne recherche sur ding donne une liste des pages ou ce mot est référencé.\n   On parle de page parente concernant une page qui contient des sous-pages, et de page enfant pour une sous-page d\u0026rsquo;une page parente. Un page peut être parente de sous-pages et elle-même sous-page d\u0026rsquo;une autre page partente. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':15,'href':'/docs/contenu/markdown/','title':"Le Markdown",'section':"Le Contenu",'content':"Le Markdown #  Afin de mettre en forme le texte du site internet, le panel utilise le langage de balisage Markdown.\nMarkdown est un langage de balisage léger créé en 2004 par John Gruber avec l\u0026rsquo;aide d\u0026rsquo; Aaron Swartz. Son but est d\u0026rsquo;offrir une syntaxe facile à lire et à écrire, et de pouvoir permettre la lecture d’un texte sans lui donner l’impression d’être formaté par des instructions particulières. Coté front-office, le Markdown permet de produire un code HTML simple et efficace pour les articles, en évitant le côté souvent trop verbeux des éditeurs WYSIWYG.\n Le Markdown vous permet d’employer les éléments de formatage suivants :\nTexte en gras #  Entourez le texte à mettre en gras, soit des symboles **, soit des symboles __ comme dans l’exemple suivant :\nVoici la **webradio des arts et du commun**. Voici la __webradio des arts et du commun__.  Texte en italique #  Entourez le texte à mettre en italique soit du symbole *, soit du symboles _, comme dans les exemples suivant :\nVoici le *webradio des arts et du commun*. Voici le _webradio des arts et du commun_.  Saut de ligne et paragraphes #  Le Markdown convertit automatiquement les sauts de ligne et les paragraphes présents dans le texte.\nMa première ligne Ma seconde ligne Un autre paragraphe.  Ligne horizontale #  Pour afficher une ligne horizontale de séparation du texte, utilisez les symboles **** entre deux sauts de paragraphes, par exemple :\nLorem ipsum dolor sit amet, consectetuer adipiscing elit. **** Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Vous pouvez également utiliser les symboles ---- pour obtenir le même résultat.\nLorem ipsum dolor sit amet, consectetuer adipiscing elit. ---- Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  Titres #  Il est possible d’utiliser jusqu’à six niveau de titres, du h1, le plus grand titre, au h6, le plus petit titre.\nPour écrire un titre, placez le symbole # devant le titre.\nPour augmenter le niveau d’un titre, additionnez les symboles # :\n Ainsi, un titre h1 aura un seul # Un titre h3 aura trois ### Et un titre h6 aura six ######  # Titre 1 Lorem ipsum dolor sit amet, consectetuer adipiscing elit. ## Titre 2 Lorem ipsum dolor sit amet, consectetuer adipiscing elit. ### Titre 3 Lorem ipsum dolor sit amet, consectetuer adipiscing elit. #### Titre 4 Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  Adresses emails #  Vous pouvez insérer une adresse email cliquable au sein du texte de plusieurs manières.\nSoit vous pouvez entourer une adresse email des symboles \u0026lt; et \u0026gt;, comme dans l’exemple suivant :\n\u0026lt;info@r22\u0026gt; Ce qui affichera : info@r22\nPour afficher du texte avec le lien, utilisez le balisage suivant :\n[Envoyez-moi un email](mailto:info@r22.fr) Ce qui affichera : Envoyez-moi un email\n Liens #  Vous pouvez insérer un lien cliquable au sein du texte de plusieurs manières.\nSoit vous pouvez écrire directement l\u0026rsquo;url, comme dans l’exemple suivant :\nww.r22.fr Ce qui affichera : www.r22.fr\nSi vous souhaitez afficher du texte avec le lien, vous pouvez utilisez la solution suivante :\n[Le site de la r22](www.r22.fr) Ce qui affichera : Le site de la r22\n Listes #  Vous pouvez créer des listes ordonnées ou des listes non ordonnées des manières suivantes\nListe ordonnées : #  Ma liste : 1. La performance 2. La conférence 3. Les concerts 4. La musique Liste non ordonnée : #  Ma liste - La performance - La conférence - Les concerts - La musique Ou alors\nMa liste * La performance * La conférence * Les concerts * La musique  Citations #  Vous pouvez créer des citations en plaçant le symbole \u0026gt; avant chaque début de phrase, comme dans l’exemple suivant :\n\u0026gt; « J’appelle Tout-monde notre univers tel qu’il change et perdure en échangeant et, en même temps, la « vision » que nous en avons. » Ce qui aura le résultat suivant :\n « J’appelle Tout-monde notre univers tel qu’il change et perdure en échangeant et, en même temps, la « vision » que nous en avons. »\n "});index.add({'id':16,'href':'/docs/panel/utilisateurs/','title':"Comptes utilisateur·ice·s",'section':"Le Panel",'content':"Comptes utilisateur·ice·s #  Les comptes utilisateur·ice·s sont les accès qui permettent d’identifier les personnes qui peuvent accéder au Panel et modifier le site internet. Il peut y avoir avoir de compte que nécessaire.\nUn compte est la combinaison d’une adresse email, d’un mot de passe et d’un rôle. Normalement, si vous lisez ce guide, vous devez déjà posséder un compte utilisateur·ice, sinon, envoyez une demande à l’adresse email : radio@r22.fr avec une demande de création de compte.\nIl n’est pas recommandé d’employer un seul compte utilistateur·ice pour travailler à plusieurs personnes sur le site internet, ceci peut engendrer des pertes de données, où chaque personne écrase et efface le travail de l’autre. Vous devriez toujours créer un compte utilistateur·ice par personne travaillant sur le site.   Pages utilisateur·ice Vous pouvez gérer les utilisateur·ice·s du site depuis deux types de page distinct. Soit la page personnelle de chaque utilisateur·ice, soit la page d\u0026rsquo;ensemble de tous les utilisateur·ice·s.\nEn savoir plus   Actions de compte Chaque compte peut être créé, modifé ou supprimé, cette section détaille ces différentes actions.\nEn savoir plus    "});index.add({'id':17,'href':'/docs/contenu/kirbytext/','title':"Contenu dynamique",'section':"Le Contenu",'content':"Contenu dynamique #  Le Markdown possède sa propre extension au sein de Kirby, nommé le Kirbytext. Il vous permet de charger du contenu dynamiquement au sein des articles du site.\nLe Kirbytext vous permet d’employer les éléments de formatage suivants :\nDate #  Pour ajouter une date dynamique au texte, vous pouvez utiliser le balisage suivant :\nAfficher l’année actuelle (date: year) Afficher n’importe quelle date avec un formatage de date en chaîne de caractère PHP (date: d.m.Y H:i:s) Pour en savoir plus sur le formatage de date PHP, rendez-vous sur la documentation de PHP.\nPour plus d’option, visitez la documentation de Kirby (en anglais).\n Téléphone #  Vous pouvez intégrer des numéros de téléphones cliquables dans vos textes grâce au balisage suivant.\nPour afficher un numéro de téléphone seul seul :\n(tel: +33612345678) Pour afficher un numéro de téléphone avec du texte :\n(tel: +33612345678 text: Nous appeller) Pour plus d’option, visitez la documentation de Kirby (en anglais).\n Fichier #  Vous pouvez inclure le lien d’un fichier à télécharger grâce au balisage suivant.\nPour afficher un fichier importé dans la page en cours, utilisez simplement le nom du fichier.\n(file: monbeaupdf.pdf) Pour donner un texte au lien de téléchargement :\n(file: monbeaupdf.pdf text: Télécharger mon beau pdf) Pour lier un fichier d’une autre page du site internet :\n(file: une/autre/page/monbeaupdf.pdf text: Télécharger mon beau pdf) Pour plus d’option, visitez la documentation de Kirby (en anglais).\n Image #  Pour incorporer une image, utilisez le balisage suivant.\nPour afficher une image importée dans la page en cours, utilisez simplement le nom de l’image :\n(image: masuperimage.jpg) Pour utiliser une image d’une autre page :\n(image: une/autre/page/masuperimage.jpg) Pour afficher une image avec du texte alternatif :\n(image: masuperimage alt: C’est une super image) Pour afficher une image avec une légende :\n(image: masuperimage caption: J’ai prise cette image dans le parc) Pour plus d’option, visitez la documentation de Kirby (en anglais).\n Adresses emails #  Similaires aux emails créés en Markdown vous pouvez créer des liens emails détaillés à l’intérieur des textes grâce au Kirbytext.\nAfficher un email sans texte de lien :\n(email:info@r22) Ce qui affichera : info@r22\nAfficher un email avec du texte de lien :\n(email: info@r22.fr text: Envoyez-moi un email) Ce qui affichera : Envoyez-moi un email\nPour plus d’option, visitez la documentation de Kirby (en anglais).\n Lien #  Similaires aux liens créés en Markdown vous pouvez créer des liens détaillés à l’intérieur des textes grâce au Kirbytext.\nPour afficher un lien avec du texte :\n(link: http://wikipedia.org text: Wikipedia) Pour afficher un lien interne au site internet :\n(link: une/page text: Lien vers une page interne) Pour afficher un lien dans une langue spécifique :\n(link: une/page lang: de) Pour afficher un lien avec une ancre :\n(link: #une-section text: Lien vers une section de la même page) Pour plus d’option, visitez la documentation de Kirby (en anglais).\n Audio #  Pour afficher un player audio au sein d’une page, utilisez le balisage suivant.\nCette fonctionnalité est encore en développement, elle peut ne pas fonctionner comme attendu.  Pour un fichier audio présent sur la page :\n(audio: monfichieraudio.mp3) Pour un fichier audio présent sur une autre page :\n(audio: une/autre/page/monfichieraudio.mp3) Pour un fichier audio avec une légende :\n(audio: monfichieraudio.mp3 caption: Écoutez mon fichier audio !)  Vidéo #  Vous pouvez intégrer des vidéos provenant de Youtube ou de Vimeo grâce au balisage suivant.\nIntégrer une vidéo depuis Youtube :\n(video: http://www.youtube.com/watch?v=lLuc6rtWkrM) Intégrer une vidéo depuis Vimeo :\n(video: http://vimeo.com/3432886) Intégrer une vidéo avec une légende :\n(video: http://youtu.be/lLuc6rtWkrM caption: This is a really nice video) Intégrer une vidéo avec des indications de taille pour l’iframe :\n(video: http://vimeo.com/3432886 width: 300 height: 200) "});index.add({'id':18,'href':'/docs/charte-graphique/couleurs/impression/','title':"Impression",'section':"Couleurs",'content':"Impression #  Les couleurs de la r22 ont été choisies pour un usage web et appartiennent à l’espace colorimétrique RVB. Pour l’impression, il est nécessaire de les convertir en CMJN. Cette conversion va ternir les couleurs, nottament, celle qui ne sont pas imprimable. Attention alors aux choix des couleurs en CMJN. Il ne doit pas toujours correspondre à l’équivalent RVB, et doit être fait en conscience de leur résultat.\nCouleurs #  Rouge Sombre\n  CMJN :\n0, 100, 100, 0\n Rouge Majeure\n  CMJN :\n0, 75, 39, 0\n Rouge Médiante\n  CMJN :\n0, 56, 37, 0\n Rouge Sensible\n  CMJN :\n0, 31, 19, 0\n  Rouge Mineure\n  CMJN :\n0, 13, 7, 0\n      Vert Majeure\n  CMJN :\n70, 0, 60, 0\n Vert Médiante\n  CMJN :\n59, 0, 65, 0\n Vert Sensible\n  CMJN :\n20, 0, 30, 0\n Vert Mineure\n  CMJN :\n30, 0, 10, 0\n   Noir \u0026amp; Gris #  Les couleurs sombres supportent beaucoup mieux la conversion en CMJN. Les changements colorimétriques sont impreceptibles.\nAttention, néanmoins, aux couleurs noir mineure et nuit mineure, qui peuvent ne pas apparaître dans certaines impressions parce que peu trop peu encrées.  Labeur\n  CMJN :\n63, 53, 47, 43\n Noir Médiante\n  CMJN :\n40, 31, 32, 10\n Noir Sensible\n  CMJN :\n22, 15, 15, 2\n Noir Mineure\n  CMJN :\n0, 0, 0, 8\n   Nuit Majeure\n  CMJN :\n84, 70, 41, 37\n Nuit Médiante\n  CMJN :\n65, 51, 25, 8\n Nuit Sensible\n  CMJN :\n27, 18, 14, 1\n Nuit Mineure\n  CMJN :\n6, 5, 3, 0\n   Écueils de l’impression #  Les rouges, noirs et nuit auront un bien meilleur rendu à l’impression que les verts. Qui sont soit trop sombre, soit paraissent bleu. Elles perdent également beaucoup en luminosité.\nAinsi, faîtes attention, lors de la création de documents dédiés à l’impression, à ne pas donner la priorité à ces couleurs, et à les employer avec parcimonie.     Vert min. CMJN\nRouge sbr. CMJN     Vert mineure\nRouge tonique     Vert Maj. CMJN\nRouge Maj. CMJN     Vert Majeure\nRouge Majeure    Texte accessible #  À cause de la perte de luminosité des couleurs à la conversion, elles ont été re-travaillées et sélectionnées pour rester lisible une fois imprimées.\nIl est ainsi important de se référer au guide ci-dessus pour choisir ses associations de couleurs pour de texte. Comme pour les couleurs RVB, certaines associations peuvent être très peu lisibles pour des personnes atteintes de daltonisme.\n R  Vert maj. CMJN\nBlanc   R  Nuit maj. CMJN\nVert min. CMJN   R  Rouge sbr. CMJN\nBlanc    R  Blanc\nVert min. CMJN\nLabeur CMJN     R  Rouge sbr. CMJN\nNuit maje. CMJN\nBlanc     .small_couleur { width: 1em; height: 1em; display: inline-block; vertical-align: middle; margin-right: 0.5em; } .small_couleur--circle { border-radius: 1em; } .small_couleur--rectangle { border-radius: 0.1em; } .small_couleur--second { margin-left: 1em; } .small_couleur--blanc { background-color: #ffffff; box-shadow: inset -1px -1px 0 0 #eee; } .boite_couleur { width: 6em; height: 6em; overflow: hidden; position: relative; margin-bottom: 1em; } .couleur { width: 6em; height: 6em; margin: 0; padding: 0; display: inline-block; vertical-align: middle; position: absolute; text-align:center; line-height: 6em; color: white; } .couleur--rectangle { border-radius: 0; } .couleur--second { margin: 0; line-height: 0; vertical-align: top; top: 0; margin-left: 2.5em; transform: rotate(45deg); width: 12em; height: 12em; position: absolute; } .couleur--blanc { background-color: #ffffff; border: 1px inset #eee; } .text { font-size: 4em; font-weight: 900; width: 1.5em; text-align: center; line-height: 1.5em; position: absolute; z-index: 2; margin: 0; top: 0; }  "});index.add({'id':19,'href':'/docs/charte-graphique/typographies/titraille/','title':"Titraille",'section':"Typographies",'content':"Titraille #  Cette page présente tous les titres par ordre de grandeur, et donne leur référence de taille, en pixel, en point et en em (sur une référence de 16px).\n Titre h1 #  BLACK LENS : UN SÉMINAIRE EXPÉRIMENTAL D’IMAGES EN MOUVEMENT  # Black Lens : un séminaire expérimental d’images en mouvement \u0026lt;h1\u0026gt;Black Lens : un séminaire expérimental d’images en mouvement\u0026lt;/h1\u0026gt; Titre • \u0026lt;h1\u0026gt;\u0026lt;/h1\u0026gt;• Alpha • class=\u0026quot;alpha\u0026quot;\n   Élément Pixel Point Em      Corps 50 px 38 pt 3.125 em   Ligne 60 px 45 pt 3.75 em   Trait 5 px 3.75 pt 0.313 em   Retrait  8 pt      Titre h2 #  Future Climates : Graduating to Numbers  ## Future Climates : Graduating to Numbers \u0026lt;h2\u0026gt;Future Climates : Graduating to Numbers\u0026lt;/h2\u0026gt; Titre • \u0026lt;h2\u0026gt;\u0026lt;/h2\u0026gt;• Bêta • class=\u0026quot;beta\u0026quot;\n   Élément Pixel Point Em      corps 40 px 30 pt 2.5 em   Ligne 49 px 37 pt 3.063 em   Trait 4 px 3 pt 0.25 em   Retrait  7 pt      Titre h3 #  Session 1 : repenser les rapports entre vivant et non vivant : nouvelles ontologies et perspectives juridiques  ### Session 1 : repenser les rapports entre vivant et non vivant : nouvelles ontologies et perspectives juridiques \u0026lt;h3\u0026gt;Session 1 : repenser les rapports entre vivant et non vivant : nouvelles ontologies et perspectives juridiques\u0026lt;/h3\u0026gt; Titre • \u0026lt;h3\u0026gt;\u0026lt;/h3\u0026gt;• Gamma • class=\u0026quot;gamma\u0026quot;\n   Élément Pixel Point Em      corps 30 px 22 pt 1.875 em   Ligne 36 px 27 pt 2.25 em   Trait 3 px 2.25 pt 0.188 em   Retrait  5 pt      Titre h4 #  Débat: comment les formes artistiques se transforment et s'inventent par le frottement des cultures ?  #### Débat: comment les formes artistiques se transforment et s'inventent par le frottement des cultures ? \u0026lt;h4\u0026gt;Débat: comment les formes artistiques se transforment et s'inventent par le frottement des cultures ?\u0026lt;/h4\u0026gt; Titre • \u0026lt;h4\u0026gt;\u0026lt;/h4\u0026gt;• Delta • class=\u0026quot;delta\u0026quot;\n   Élément Pixel Point Em      corps 25 px 19 pt 1.563 em   Ligne 30 px 23 pt 1.875 em   Trait 2.5 px 1.875 pt 0.156 em   Retrait  4 pt      Titre h5 #  Le journal du tout-monde #3 the pastkeeps coming back because the present cannot be remembered*  ##### DLe journal du tout-monde #3 the pastkeeps coming back because the present cannot be remembered* \u0026lt;h5\u0026gt;Le journal du tout-monde #3 the pastkeeps coming back because the present cannot be remembered*\u0026lt;/h5\u0026gt; Titre • \u0026lt;h5\u0026gt;\u0026lt;/h5\u0026gt;• Epsilon • class=\u0026quot;epsilon\u0026quot;\n   Élément Pixel Point Em      corps 20 px 15 pt 1.25 em   Ligne 24 px 18 pt 1.5 em   Trait 2 px 1.5 pt 0.125 em   Retrait  3.5 pt      Titre h6 #  Geontopower : cartographie de la scène européenne de la critique du libéralisme tardif  ###### Geontopower : cartographie de la scène européenne de la critique du libéralisme tardif \u0026lt;h6\u0026gt;Geontopower : cartographie de la scène européenne de la critique du libéralisme tardif\u0026lt;/h6\u0026gt; Titre • \u0026lt;h6\u0026gt;\u0026lt;/h6\u0026gt;• Zêta • class=\u0026quot;zeta\u0026quot;\n   Élément Pixel Point Em      corps 18 px 13.5 pt 1.125 em   Ligne 24 px 17 pt 1.5 em   Trait 2 px 1.5 pt 0.125 em   Retrait  3.5 pt     @import \"/fonts/al_kashi/al_kashi.css\"; .h1, .h2, .h3, .h4, .h5, .h6 { font-family: 'Al Kashi',sans-serif; font-weight: normal; display: inline; text-transform: uppercase; hyphens: auto; color: #505155; } .h1 { box-shadow: inset 0 -5px 0 0 #FF3C33; line-height: 1.2; font-size: 3.125em; } .h2 { line-height: 1.2; box-shadow: inset 0 -4px 0 0 #FF3C33; font-size: 2.5em; } .h3 { line-height: 1.2; box-shadow: inset 0 -3px 0 0 #FF3C33; font-size: 1.875em; } .h4 { line-height: 1.2; box-shadow: inset 0 -2.5px 0 0 #FF3C33; font-size: 1.563em; } .h5 { line-height: 1.2; box-shadow: inset 0 -2px 0 0 #FF3C33; font-size: 1.25em; } .h6 { line-height: 1.2; box-shadow: inset 0 -1.8px 0 0 #FF3C33; font-size: 1.125em; }  "});index.add({'id':20,'href':'/docs/charte-graphique/typographies/','title':"Typographies",'section':"Charte graphique",'content':"Typographies #  Ce chapitre concerne tout ce qui à un rapport avec le texte. Du choix et de l’utilisation des typographie, à la composition d’un article ou la conception d’un titre.\nLa Al Kashi est la typographie utilisée pour le titrage. Elle ne possède qu’une seule graisse et pas d’italique.\nLa Chivo est la typographie de labeur de la radio, elle s’emploie dans toutes ses graisses, avec ses italiques.\n Les police de caractères Cette section détaille les police Al Kashi et Chivo.\nLa suite   Composition générale Composition générale du texte dans l’identité de la r22.\nLa suite   Titraille L’ensemble des titres de la radio. Du h1 au h6, avec leur références de taille.\nLa suite     Paragraphes Détail des chapôs et paragraphes utilisés sur le site de la radio.\nLa suite   Sémantique L’ensemble des éléments textuels, emphases, listes, citations, et leurs références.\nLa suite   Boutons Les différents boutons du site internet\nLa suite     Feuille de triche Table des références de taille, sans présentation des éléments. Pour un accès rapide ou une conversion.\nLa suite      "});index.add({'id':21,'href':'/docs/contenu/fichiers/','title':"Fichiers",'section':"Le Contenu",'content':"Fichiers #  Les pages peuvent contenir n\u0026rsquo;importe quel nombre d\u0026rsquo;images, de vidéos, de documents ou tout autre fichier. Ces fichiers sont stockés directement dans le dossier de la page.\nLes fichiers peuvent être (et sans s\u0026rsquo;y limiter):\n   Type Extensions     Images .jpg, .png, .gif, .eps, .svg, .ico, .tif, .wep, etc.   Documents .pdf, .doc, .docx, .md, .ppt, .rtf, .csv, etc.   Archives .zip, .gz, .tar, .tgz, .gzip, etc.   Vidéos .mov, .avi, .flv, .m4v, .movie, .mpe, .mpg, .mp4, .ogg, etc.   Audios .mp3, .aiff, .m4a, .midi, .waw, etc.   Code .css, .js, .json, .java, .html, .php, .rb, etc.    Et encore de nombreux autres types de fichiers.\nToutefois, le type de fichier qui va particulièrement nous intéresser ici sont les images.\n Page de fichier Comme tous les autres éléments du site internet, les fichiers possèdent leur propre page au sein du Panel.\nEn savoir plus   Gérer les fichiers Les pages de contenu possèdent une section Fichiers qui permet d\u0026rsquo;ajouter, de modifier ou de supprimer des fichiers.\nEn savoir plus   Utiliser les fichiers Comment importer des fichiers et indiquer à la page quel fichier utiliser\nEn savoir plus    "});index.add({'id':22,'href':'/docs/charte-graphique/iconographie/','title':"Iconographie",'section':"Charte graphique",'content':"Iconographie #  L’identité de la radio est complétée par un jeu d’icônes. Elles représentent des parties du site internet, des éléments sonores, des typologies d’émissions.\nElles sont conçues pour être simples, reconnaissables, amusantes, didactiques et un peu fantaisistes. Chaque icône peut se réduire à très petite échelle, comme s’exposer en grand.Elles sont colorées avec les couleurs principales de la radio, mais peuvent changer d’aspect en fonction des situations ou des thèmes.\nDe la même manière, certaine parties des icones peuvent disparaître ou apparaître.\nAntenne\n Auteur.ice\n Catégorie\n Programme\n Phare\n Son\n Tag\n Timeline\n Reliée\n Focus\n Écoute\n École\n Durée\n Date\n Play\n   Grille #   Les icônes sont construites sur une grille de 48 x 48 px. Chacune des unités de la grille représentent un pixel. À la création, elles furent assemblée sur une grille de 192 px, soit à 400% de leur taille initiale, pour leur offrir une définition optimale.\nLes icônes possèdent également leur zone de protection, équivalente à 4 unité. Elle permet de positionner les icônes avec précision et élégance dans les compositions, et leur assure une bonne lisibilité.\n Ratio \u0026amp; Homothétie #   Pour l’emploi des icones, lorsqu’on les agrandi ou rétréci, il est essentiel de préserver un ratio de 4. Cela leur permet de conserver un aspect et un alignement parfait, sans déformation.\nNe réduisez pas les icones à une taille inférieure à 8mm. Sinon, elles deviendront illisibles et risque de donner de mauvais résultat à l’impression.\nSous leurs versions vectorielles, les icones peuvent être agrandies sans limites, tout en respectant le ratio de 4.   Couleurs #  Les icônes sont assorties en huit ensembles colorés, correspondant soit à un thème, soit à un état.\nL’ensemble prioritaire, et qui correspond aux besoins d’utilisation principaux, et l’ensemble « classique ». Cependant, il peut être nécessaire d’employer une icône sur un fond coloré, sur une image, ou pour signifier une information.Ainsi, ces ensembles viennent répondre à ces demandes.\nCes ensembles ne sont pas exhaustifs, d’autres combinaisons de couleurs peuvent apparaître sur le site internet sans être décrite ici.   Classiques #  Ce sont les icônes d’emploi prioritaire, avec les couleurs principales de la radio.\n         Télécharger l'ensemble  .png  .tiff  .eps  .svg   Thème vert #  Les couleurs des icônes sont adaptées à un fond vert, en étant notamment soulignées de blanc.\n         Télécharger l'ensemble  .png  .tiff  .eps  .svg   Thème rouge #  Pour l’utilisation des icones sur des surfaces rouges, ou au sein du thème rouge.\n         Télécharger l'ensemble  .png  .tiff  .eps  .svg   Thème nuit #  Cet ensemble d’incônes est adaptés aux couleurs « nuits », et aux surfaces sombres.\n         Télécharger l'ensemble  .png  .tiff  .eps  .svg   Inactives #  À utiliser pour montrer que l’élément représenté par l’icône est désactivé ou manquant.\n         Télécharger l'ensemble  .png  .tiff  .eps  .svg   Sur image #  Icones pour une utilisation sur image foncée. Pour des images claires, utiliser la série classique.\n         Télécharger l'ensemble  .png  .tiff  .eps  .svg   Exploration #  Cet ensemble d’icone est utilisé au sein de la section exploration du site internet, et peux être utilisé comme alternative au thème vert.\n         Télécharger l'ensemble  .png  .tiff  .eps  .svg   Noir #  Ensemble d’icone en une seule couleur, adapté aux documents en noir et blanc.\n         Télécharger l'ensemble  .png  .tiff  .eps  .svg  .icone_grid{ display:flex; flex-wrap: wrap; margin:3em 0; } .icone{ width:20%; min-width:140px; text-align:center; margin-bottom:1em; } .small_icone{ width:12.5%; min-width:100px; text-align:center; box-sizing: border-box; padding: 1em;}  "});index.add({'id':23,'href':'/docs/charte-graphique/typographies/paragraphes/','title':"Paragraphes",'section':"Typographies",'content':"Paragraphes #  Cette page présente tous les paragraphes par ordre de grandeur, et donne leur référence de taille, en pixel, en point et en em (sur une référence de 16px).\n Chapô • Êta #  Près de 5 ans se sont écoulés depuis la première conversation publique d’Ismaïl Bahri à Khiasma. Des moments de partage de ses expériences, de ses doutes et tâtonnements, les premières versions de certaines pièces importantes; d’autres qui ne verront finalement jamais le jour.\n \u0026lt;p class=\u0026quot;eta\u0026quot;\u0026gt;Près de 5 ans se sont écoulés…\u0026lt;/p\u0026gt;    Élément Pixel Point Em     Corps 20 px 15 pt 1.25 em   Ligne 24 px 18 pt 1.5 em     Chapô • Thêta #  L’ARG (Animation Research Group) est un collectif travaillant à la mise en place de méthodologies et de protocoles autour de l’ «expanded animation» : une réinvention du concept d’animation comme mode performatif de perception et de création d’images et de récits, transversal à tout medium, genre et support, au-delà de la définition générique de «film d’animation».\n \u0026lt;p class=\u0026quot;theta\u0026quot;\u0026gt;L’ARG (Animation Research Group) est un collectif…\u0026lt;/p\u0026gt;    Élément Pixel Point Em     Corps 16 px 12 pt 1 em   Ligne 22 px 17 pt 1.375 em     Chapô • Iota #  Black Lens a été construit comme une longue conversation traversant 4 demi-journées, un espace de travail ouvert où ont été mis en partage des formes et des recherches qui interrogent les conditions d’invention de lieux sûrs (safe spaces) par le geste et le récit, le code et le corps. En suivant les lignes de fuite de l’exposition Op-Film: An Archaeology of Optics, Black Lens a tenté de tracer, au cœur des technologies du visible, le contour d’écologies minoritaires, de formes de vie et de transmission de savoir. De l’humus à l’océan, de l’algorithme au créole, de la surface à la profondeur, où se cristallisent et se dessinent les nouvelles zones de conflit, où s’écrivent et se tissent les voix dont nous avons besoin pour lutter ?\n \u0026lt;p class=\u0026quot;iota\u0026quot;\u0026gt;construit comme une longue conversation…\u0026lt;/p\u0026gt;    Élément Pixel Point Em     Corps 14 px 10.5 pt 0.875 em   Ligne 20 px 15 pt 1.25 em     Paragraphe • Giga #  À partir des travaux d’Elizabeth Povinelli, ce colloque se propose d’examiner les racines des sujets libéraux ainsi que les processus de subjectivation contrainte propres au libéralisme.\n \u0026lt;p class=\u0026quot;giga\u0026quot;\u0026gt;À partir des travaux…\u0026lt;/p\u0026gt;    Élément Pixel Point Em     Corps 20 px 15 pt 1.25 em   Ligne 30 px 23 pt 1.875 em     Paragraphe • Mega #  Quels sont les usages sociaux de l’art ? En quoi la pédagogie institutionnelle peut-elle trouver des échos dans le champ artistique et dans la médiation au sens large ? Quels rôles pour les centres d’art dans les champs politique et social ? L’exposition est-elle un médium pertinent pour travailler avec les publics à l’échelle locale ?\n \u0026lt;p class=\u0026quot;mega\u0026quot;\u0026gt;Quels sont les usages…\u0026lt;/p\u0026gt;    Élément Pixel Point Em     Corps 18 px 14.5 pt 1.125 em   Ligne 27 px 20.25 pt 1.688 em     Paragraphe • Kappa #  Et ce, pour une carte blanche où il traversait ses productions photographiques et cinématographiques de ces dernières années dans le cadre de la clôture de son post-diplôme à l’École Européenne Supérieure de l’Image. Ce programme où l’artiste questionnait et se jouait des crises de l’identité contemporaine se composait de deux films présentés le jeudi 18 janvier au MK2 Beaubourg dans le cadre des Séances Phantom, d’une exposition photographique, de projections et d’une performance à l’Espace Khiasma le vendredi 19 janvier.\n \u0026lt;p class=\u0026quot;kappa\u0026quot;\u0026gt;une carte blanche où il traversait…\u0026lt;/p\u0026gt;    Élément Pixel Point Em     Corps 16 px 13.5 pt 1 em   Ligne 24 px 17 pt 1.5 em     Paragraphe • Lambda #  Elle prend comme motif et symbole des îles à la fois réelles et imaginées pour fabuler de nouvelles formes de relations dans un monde hanté par l’imminence d’une ruine écologique. Sur la r22, l'antenne «Arc \u0026 Flèche» se fera le journal de bord de ce travail en cours, proposant pièces sonores, entretiens, lectures et performances.\n \u0026lt;p class=\u0026quot;lambda\u0026quot;\u0026gt;Elle prend comme motif…\u0026lt;/p\u0026gt;    Élément Pixel Point Em     Corps 14 px 10.5 pt 0.875 em   Ligne 20 px 15 pt 1.25 em     Paragraphe • Mu #  Quelles histoires mobiliser pour frayer des mondes vivables dans ce contexte ? Peut-être pas des histoires inédites — du jamais vu ! — mais des histoires qui se souviennent, des histoires qui crépitent.\n \u0026lt;p class=\u0026quot;mu\u0026quot;\u0026gt;Quelles histoires mobiliser…\u0026lt;/p\u0026gt;    Élément Pixel Point Em     Corps 12 px 9 pt 0.75 em   Ligne 18 px 13.5 pt 1.125 em     Paragraphe • Nu #  Un espace qui reconnaîtrait l’existence identitaire (personnelle) et non communautaire (collective). Où l’on pourrait parler de soi et interroger ses lieux imaginaires et originels, moins les lieux d’où l’on vient que les lieux où l’on va, dans l’idée de faire ensemble.\n \u0026lt;p class=\u0026quot;nu\u0026quot;\u0026gt;Un espace qui reconnaîtrait…\u0026lt;/p\u0026gt;    Élément Pixel Point Em     Corps 10 px 8 pt 0.625 em   Ligne 15 px 12 pt 0.936 em    @import \"/fonts/al_kashi/al_kashi.css\"; @import \"/fonts/chivo/chivo.css\"; .eta, .theta, .iota { font-family: 'Al Kashi',sans-serif; color: #505155; } .eta { font-size: 1.25em; line-height: 1.5; } .theta { font-size: 1em; line-height: 1.375; } .iota { font-size: .875em; line-height: 1.42857143; } .giga, .mega, .kappa, .lambda, .mu, .nu { font-family: 'Chivo', sans-serif; color: #505155; } .giga { font-size: 1.25em; line-height: 1.5; } .mega { font-size: 1.125em; line-height: 1.5; } .kappa { font-size: 1em; line-height: 1.5; font-weight: normal; letter-spacing: .01em; hyphens: auto; font-family: 'Chivo', sans-serif; color: #505155; } .lambda { font-size: .875em; line-height: 1.42857143; font-weight: normal; hyphens: auto; font-family: 'Chivo', sans-serif; color: #505155; } .mu { font-size: .75em; line-height: 1.5; color: #9B9B9B; font-style: italic; } .nu { font-size: 10px; line-height: 1.5; color: #9B9B9B; font-style: italic; } .mu a, .nu a { color: #505155; font-weight: 700; font-style: normal; border-bottom: 1px solid transparent; color: #505155; } .eta a, .theta a, .iota a, .giga a, .mega a, .kappa a, .lambda a { color: #0ADC82; text-decoration: none; } .eta em, .theta em, .iota em, .giga em, .mega em, .kappa em, .lambda em { font-style: normal; color: #9B9B9B; }  "});index.add({'id':24,'href':'/docs/charte-graphique/typographies/semantique/','title':"Sémantique",'section':"Typographies",'content':"Sémantique #  Cette section liste tous les éléments textuels, les emphases, les listes, les citations, etc. ainsi que le code coresspondant, en html et en markdown.\nCes éléments permettent d\u0026rsquo;annoter, de mettre en exergue ou de souligner des sections d\u0026rsquo;un texte. Leur usage est principalement destiné au site internet. S\u0026rsquo;ils doivent néanmoins être utilisés sur un document de communication, ils pourront être reproduits à partir de cette page.\n Element textuel #     Élément Html Markdown     I18N \u0026lt;abbr\u0026gt;    Lourd \u0026lt;strong\u0026gt; \u0026lt;b\u0026gt; **Lourd**   Citation \u0026lt;cite\u0026gt; \u0026gt;citation   Hello World! \u0026lt;code\u0026gt; Hello World!   Supprimé \u0026lt;del\u0026gt; ~~Supprimé~~   Emphasé \u0026lt;em\u0026gt; *Emphasé*   Italique \u0026lt;i\u0026gt; *Italique*   Inseré \u0026lt;ins\u0026gt;    Ctrl + S \u0026lt;kbd\u0026gt;    Surligné \u0026lt;mark\u0026gt;    æ¼¢ kan å­— ji \u0026lt;ruby\u0026gt;    Biffure \u0026lt;s\u0026gt; ~~Biffure~~   Texte Indice \u0026lt;sub\u0026gt;    Texte Exposant \u0026lt;sup\u0026gt;    20:00 \u0026lt;time\u0026gt;    Souligné \u0026lt;u\u0026gt;    x = y + 2 \u0026lt;var\u0026gt;      Bloc de citation #   Tout ce qui rend fou et qui tourmente, tout ce qui remue le fond trouble des choses, toute vérité contenant une partie de malice, tout ce qui ébranle les nerfs et embrouille le cerveau, tout ce qui est démoniaque dans la vie et dans la pensée, tout mal était pour ce fou d'Achab, visiblement personnifié, et devenait affrontable en Moby Dick.\n- Herman Melville – Moby Dick     HTML\n\u0026lt;blockquote\u0026gt; \u0026lt;p\u0026gt;Tout ce qui rend fou et qui tourmente, tout ce qui remue le fond trouble des choses, toute vérité contenant une partie de malice, tout ce qui ébranle les nerfs et embrouille le cerveau, tout ce qui est démoniaque dans la vie et dans la pensée, tout mal était pour ce fou d'Achab, visiblement personnifié, et devenait affrontable en Moby Dick.\u0026lt;/p\u0026gt; \u0026lt;cite\u0026gt;- Herman Melville – \u0026lt;b\u0026gt;Moby Dick\u0026lt;/b\u0026gt;\u0026lt;/cite\u0026gt; \u0026lt;/blockquote\u0026gt; Markdown\n\u0026gt;Tout ce qui rend fou et qui tourmente, tout ce qui remue le fond trouble des choses, toute vérité contenant une partie de malice, tout ce qui ébranle les nerfs et embrouille le cerveau, tout ce qui est démoniaque dans la vie et dans la pensée, tout mal était pour ce fou d'Achab, visiblement personnifié, et devenait affrontable en Moby Dick. \u0026gt; - Herman Melville – \u0026lt;b\u0026gt;Moby Dick  Listes #  Liste non ordonnée #   Élément de liste 1 Élément de liste 2  Élément de liste 2.1 Élément de liste 2.2 Élément de liste 2.3  Élement de liste 2.3.1     Élément de liste 3   Liste ordonnée #   Élément de liste 1 Élément de liste 2 Élément de liste 2.1 Élément de liste 2.2 Élément de liste 2.3  Élement de liste 2.3.1  Test     Élément de liste 3   Définitions #   Liste de description : terme 1 Liste de description : description 1 Liste de description : terme 2 Liste de description : description 2 Liste de description : terme 3 Liste de description : description  \u0026lt;!-- Liste non ordonnée --\u0026gt; - Élément de liste 1 - Élément de liste 2 - Élément de liste 2.1 - Élément de liste 2.2 - Élément de liste 2.3 - Élément de liste 3 \u0026lt;!-- Liste ordonée --\u0026gt; 1. Élément de liste 1 2. Élément de liste 2 1. Élément de liste 2.1 2. Élément de liste 2.2 3. Élément de liste 2.3 3. Élément de liste 3 \u0026lt;!-- Liste de description --\u0026gt; \u0026lt;dl\u0026gt; \u0026lt;dt\u0026gt;Liste de description : terme\u0026lt;/dt\u0026gt; \u0026lt;dd\u0026gt;Liste de description : description\u0026lt;/dd\u0026gt; \u0026lt;/dl\u0026gt;  Tables \u0026amp; tableaux #  Voici un premier tableau :\n   Ordre Titre Durée Artist Année     1 Untilted 0:36 Burial 2006   2 Distant Lights 5:27 Burial 2006   3 Spaceape 4:02 Burial 2006   4 Wounder 4:52 Burial 2006   5 Night Bus 2:20 Burial 2006   6 Southern Comfort 5:02 Burial 2006   7 U Hurt Me 5:23 Burial 2006   8 Gutted 4:43 Burial 2006   9 Forgive 3:08 Burial 2006   10 Broken Home 5:05 Burial 2006   11 Prayer 3:46 Burial 2006   12 Pirates 6:11 Burial 2006   13 Untilted 0:55 Burial 2006    | Ordre | Titre | Durée | Artist | Année | | ----- | ----------------- | ----------- | ------- | ------- | | 1 | Untilted | 0:36 | Burial | 2006 | | 2 | Distant Lights | 5:27 | Burial | 2006 | | 3 | Spaceape | 4:02 | Burial | 2006 | | 4 | Wounder | 4:52 | Burial | 2006 | | 5 | Night Bus | 2:20 | Burial | 2006 | | 6 | Southern Comfort | 5:02 | Burial | 2006 | | 7 | U Hurt Me | 5:23 | Burial | 2006 | | 8 | Gutted | 4:43 | Burial | 2006 | | 9 | Forgive | 3:08 | Burial | 2006 | | 10 | Broken Home | 5:05 | Burial | 2006 | | 11 | Prayer | 3:46 | Burial | 2006 | | 12 | Pirates | 6:11 | Burial | 2006 | | 13 | Untilted | 0:55 | Burial | 2006 | Voici une second tableau :\n   Tables Are Cool     col 1 is left-aligned $1600   col 2 is centered $12   col 3 is right-aligned $1    | Tables | Are | Cool | |----------|:-------------:|------:| | col 1 is | left-aligned | $1600 | | col 2 is | centered | $12 | | col 3 is | right-aligned | $1 | "});index.add({'id':25,'href':'/docs/charte-graphique/typographies/boutons/','title':"Boutons",'section':"Typographies",'content':"Boutons #  Attention : Cette page n\u0026rsquo;est pas complète. La transition de la documentation en v2 à laissé des incohérences dans cette page !  Cette section présente des boutons simples d\u0026rsquo;usages en différents styles, tailles et types.\nCore Button #  Bouton de défault Bouton gras Bouton primaire Bouton alternatif Bouton secondaire Lien\n\u0026lt;button class=\u0026quot;btn\u0026quot;\u0026gt;Bouton de défault\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn btn--bold\u0026quot;\u0026gt;Bouton gras\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn btn--primaire\u0026quot;\u0026gt;Bouton primaire\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn btn--primaire--alt\u0026quot;\u0026gt;Bouton primaire mediant\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn btn--secondaire\u0026quot;\u0026gt;Bouton secondaire\u0026lt;/button\u0026gt; \u0026lt;a href=\u0026quot;some link\u0026quot; class=\u0026quot;btn btn--link\u0026quot;\u0026gt;Lien\u0026lt;/a\u0026gt; Couleur des boutons #  Les couleurs sont attribués via le color.less\nbutton de succès button d\u0026rsquo;erreur\n\u0026lt;button class=\u0026quot;btn btn--success\u0026quot;\u0026gt;button de succès\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn btn--error\u0026quot;\u0026gt;button d'erreur\u0026lt;/button\u0026gt; Tailles des boutons #  Trois classes maîtrisent les taillent des boutons :\n grand moyen petit  grand bouton bouton moyen petit bouton\nPour un bouton \u0026ldquo;full width\u0026rdquo;, la classe toute_taille est de mise\nBouton toute_taille\n\u0026lt;button class=\u0026quot;btn btn--grand\u0026quot;\u0026gt;grand bouton\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn\u0026quot;\u0026gt;bouton moyen\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn btn--petit\u0026quot;\u0026gt;petit bouton\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn btn--toute_taille\u0026quot;\u0026gt;Bouton toute-taille\u0026lt;/button\u0026gt; Formes des boutons #  Pour des boutons de forme carrées, la classe btn-action-carre est utilisée. Pour des boutons de forme ronde, la classe btn-action-cercle est utilisée.\n La suite En savoir plus Aller !\n      \n\u0026lt;button class=\u0026quot;btn btn--carre\u0026quot;\u0026gt;\u0026lt;i class=\u0026quot;icon-smile-o\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn btn--cercle\u0026quot;\u0026gt;\u0026lt;i class=\u0026quot;icon-smile-o\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/button\u0026gt;  Êtat des boutons #  Pour un bouton actif il faut ajouter la classe active ou l\u0026rsquo;attribut active\nBouton actif Bouton actif Bouton actif\n\u0026lt;button class=\u0026quot;btn btn--active\u0026quot;\u0026gt;Bouton actif\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn btn--primaire btn--active\u0026quot;\u0026gt;Bouton actif\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn btn--primaire--alt btn--active\u0026quot;\u0026gt;Bouton actif\u0026lt;/button\u0026gt; Pour un bouton désactivé il faut ajouter la classe desactive ou l\u0026rsquo;attribut disabled\nBouton désactivé Bouton désactivé Bouton désactivé\n\u0026lt;button class=\u0026quot;btn btn--desactive\u0026quot; tabindex=\u0026quot;-1\u0026quot;\u0026gt;Bouton désactivé\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn\u0026quot; disabled tabindex=\u0026quot;-1\u0026quot;\u0026gt;Bouton désactivé\u0026lt;/button\u0026gt; Pour un état de chargement pour les boutons, il faut ajouter la classe tournoiement.\nbutton button button\n\u0026lt;button class=\u0026quot;btn btn--tournoiement\u0026quot;\u0026gt;button\u0026lt;/button\u0026gt; Groupe de bouton #  Pour forger un ensemble de bouton groupé, il faut ajouter la classe btn_assemblee au parent contenant. Pour un groupe full width, il faut rajouter la classe btn_assemblee--toute-taille.\nPremier bouton Second bouton Troisième bouton  Premier bouton Second bouton Troisième bouton  Premier bouton Second bouton Troisième bouton  \u0026lt;div class=\u0026quot;btn_assemblee btn_assemblee--toute_taille\u0026quot;\u0026gt; \u0026lt;button class=\u0026quot;btn\u0026quot;\u0026gt;Premier bouton\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn\u0026quot;\u0026gt;Second bouton\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026quot;btn\u0026quot;\u0026gt;Troisième bouton\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt;  .btn { font-size: 16px; font-family: 'Chivo',sans-serif; cursor: pointer; margin: 0.3em 0; padding: .3em .5em; border-radius: .2em; border: 1px solid #FA8F8A; color: #FA8F8A; background-color: transparent; transition: all .3s ease; font-weight: 600; } .btn:hover { border-color: #FF5C55; background-color: #FF5C55; color: white; } .btn--bold { font-weight: 900; } .btn--primaire, .btn .btn--primaire { background-color: #FF3C33; border-color: #FF3C33; color: white; font-weight: 900; letter-spacing: .01em; } .btn--primaire:hover, .btn .btn--primaire:hover, .btn--primaire.btn--active, .btn .btn--primaire.btn--active { background-color: #e60707; border-color: #e60707; color: white; } .btn--primaire--alt { background-color: #FF5C55; border-color: #FF5C55; color: white; font-weight: 900; letter-spacing: .01em; } .btn--primaire--alt:hover, .btn--primaire--alt.btn--active { background-color: #e60707; border-color: #e60707; color: white; } .btn--secondaire { background-color: #505155; border-color: #505155; color: white; font-weight: 900; letter-spacing: .01em; } .btn--secondaire:hover, .btn--secondaire:focus, .btn--secondaire.btn--active { background-color: #353E56; border-color: #353E56; color: white; } .btn--link { display: inline-block; line-height: 1.3; font-weight: 700; } .btn--grand { font-size: 18px; font-size: 1.125em; line-height: 1.5; } .btn--petit { font-size: 14px; font-size: .875em; line-height: 20px; line-height: 1.42857143; } .btn--toute_taille { width: 100%; } .btn--carre { border-radius: 0; padding: .4em .6em; } .btn--cercle { border-radius: 50%; padding: .4em .6em; height: 2.3em; width: 2.3em; } .btn--active { pointer-events: visible; } .btn--primaire--alt:hover, .btn--primaire--alt.btn--active { background-color: #e60707; border-color: #e60707; color: white; } .btn--desactive, .btn[disabled] { pointer-events: none; cursor: default; background-color: white; border-color: #D6D6D6; color: #D6D6D6; }  "});index.add({'id':26,'href':'/docs/charte-graphique/typographies/triche/','title':"Feuille de triche",'section':"Typographies",'content':"Feuille de triche #  Table des références de taille des titres, chapôs et paragraphes, sans présentation des éléments.\nPour un accès rapide ou une conversion.\n   Nom Famille Corps px Interligne px Corps pt Interligne pt Corps em Interligne em     Alpha AlKashi 50 px 60 px 38 pt 45 pt 3.125 em 3.75 em   Bêta AlKashi 40 px 49 px 30 pt 37 pt 2.5 em 3.863 em   Gamma AlKashi 30 px 36 px 22 pt 27 pt 1.875 em 2.25 em   Delta AlKashi 25 px 30 px 19 pt 23 pt 1.563 em 1.875 em   Epsilon AlKashi 20 px 24 px 15 pt 18 pt 1.25 em 1.5 em   Zêta AlKashi 18 px 24 px 13.5 pt 17 pt 1.125 em 1.5 em             Êta Al Kashi 20 px 24 px 15 pt 18 pt 1.125 em 1.5 em   Thêta Al Kashi 16 px 22 px 12 pt 17 pt 1 em 1.375 em   Iota Al Kashi 14 px 20 px 10.5 pt 15 pt 0.875 em 1.125 em             Giga Chivo 20 px 30 px 15 pt 23 pt 1.25 em 1.875 em   Mega Chivo 18 px 27 px 14.5 pt 20.25 pt 1.125 em 1.688 em   Kappa Chivo 16 px 24 px 13.5 pt 17 pt 1 em 1.5 em   Lambda Chivo 14 px 20 px 10.5 pt 15 pt 0.875 em 1.25 em   Mu Chivo 12 px 18 px 9 pt 13.5 pt 0.75 em 1.125 em   Nu Chivo 10 px 15 px 8 pt 12 pt 0.625 em 0.936 em    "});index.add({'id':27,'href':'/docs/panel/utilisateurs/pages/','title':"Les pages des utilistateur·ice·s",'section':"Comptes utilisateur·ice·s",'content':"Les pages des utilistateur·ice·s #  Au sein du Panel, il est important de bien différencier la page Utilisateur, qui est la page personnelle de chaque utilisateur·ice du Panel, et la page Utilisateurs, qui regroupe l\u0026rsquo;ensemble des utilisateur·ice·s du Panel.\nPage Utilisateur #  Chaque compte possède une page spécifique qui les est dédiée. Elle recense les informations de ce compte et permet de modifier ses informations.\nPour accéder à une page compte, allez sur le hamburger du menu et cliquez sur le bouton votre compte.\n  Page Utilisateurs #  La page Utilisateurs regroupe tous les comptes utilistateur·ice·s que possède le site internet.\nVous pouvez accéder à des utilistateur·ice·s en particuliers, créer, modifier ou supprimer des comptes à partir de cette page. Pour vous y rendre, allez sur le hamburger et cliquer sur le bouton utilisateurs.\n "});index.add({'id':28,'href':'/docs/contenu/fichiers/page/','title':"Page de fichier",'section':"Fichiers",'content':"Page de fichier #  Le Panel vous permet de modifier les fichiers à partir de la page du fichier. C\u0026rsquo;est une page dédiée à un fichier qui vous présente de nombreuses informations le concernant, comme son nom, son poid, son type, etc. Pour les images, vous pouvez même trouver des informations concernant sa dimension ou son orientation.\nPour attendre la page d\u0026rsquo;un fichier, vous devez cliquez sur la boîte d\u0026rsquo;un fichier à partir d\u0026rsquo;une section de fichier dans une page de contenu, ou au sein champ de sélection de fichier.\nPar exemple, la capture d\u0026rsquo;écran suivant nous montre la page d\u0026rsquo;une photographie utilisée comme couverture de la page Festival du site.\n Paramètres du fichier #  Depuis la page d\u0026rsquo;un fichier, vous avez accès à plusieurs paramètres pour celui-ci. Pour y accéder, cliquez sur le bouton Paramètres (accompagné d\u0026rsquo;une icône représentant un rouage). Une menu déroulant apparaîtera avec plusieurs options.\n    Paramètre Description     Ouvrir Ce bouton vous permet d\u0026rsquo;ouvrir le fichier dans votre navigateur, depuis son URL média, ainsi d\u0026rsquo;accéder directement au fichier.   Renommer Ce paramètre vous donne la possibilité de renommer le fichier. Ça peut être très utile pour s\u0026rsquo;y retrouver parmis de nombreux fichiers ou photographie, de leur donner des noms reconnaissables.   Remplacer Ce bouton vous permet de remplacer le fichier, tout en conservant la page du fichier et les métadonnées renseignées. Très pratique pour mettre à jour une image avec une nouvelle version, sans perdre les modifications, par exemple.   Supprimer Ce bouton vous permet de supprimer un fichier du Panel, et ainsi d\u0026rsquo;effacer sa page.    Attention : Si vous renommez un fichier utilisé par une page de contenu, pensez à mettre à jour la sélection du ficher dans la page. En effet, la sélection de fichier fonctionne grâce au nom de fichier, aussi, la page ne trouvera plus le fichier renommé parce qu\u0026rsquo;il aura changé de nom.   Métadonnées #  La page d\u0026rsquo;un fichier nous permet de renseigner des informations supplémentaires sur le fichier. Notamment son texte alternatif et sa légende. Ces informations sont très importante concernant les images (voir essentielles).\nTexte alternatif #  Le texte alternatif accompagne un fichier et est affiché s\u0026rsquo;il est indisponnible. C\u0026rsquo;est notamment vrai pour les images, mais également les fichiers audios, vidéos ou les documents.\nC\u0026rsquo;est également le texte qui sera lu lorsque le site sera visité par l\u0026rsquo;intermédiaire de lecteurs d\u0026rsquo;écran. Aussi, son rôle est de décrire l\u0026rsquo;image le plus simplement et efficacement possible.\nLe texte alternatif joue également un rôle dans le S.E.O.1 et est pris en compte par les algorythmes des moteurs de recherche. Il contribue ainsi à l\u0026rsquo;optimisation du référencement du site internet.\n À propos : Le texte alternatif doit être composé avec du texte brut. Ainsi n\u0026rsquo;utilisez pas de Markdown dans ce champ, il ne serait pas compris pas le site internet.  La légende #  La légende est également un texte qui accompagne l\u0026rsquo;image, mais qui cette fois-ci est affichée sur le site internet quand c\u0026rsquo;est possible. Elle permet de donner un contexte à l\u0026rsquo;image, ou d\u0026rsquo;afficher les crédits d\u0026rsquo;une photographie.\nPar exemple, la capture suivante présente une image affichée sur le front-office avec sa légende.\n   Le S.E.O., ou Search Engigne Optimisation (Optimisation des moteurs de recherche en français) sont les manières d\u0026rsquo;améliorer la lecture et l\u0026rsquo;indexation d\u0026rsquo;un site internet par les algorythmes des moteurs de recherche comme Google ou Yahoo. L\u0026rsquo;une de ces manières est le référencement naturel pour lequel le texte alternatif joue. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':29,'href':'/docs/contenu/pages/statuts/','title':"Statuts des pages",'section':"Pages et publications",'content':"Statuts des pages #  Dans le panel, les pages peuvent avoir l\u0026rsquo;un des trois statuts suivants :\nBrouillons Brouillons Les pages en état de brouillon n\u0026rsquo;existent qu\u0026rsquo;à l\u0026rsquo;intérieur du Panel. Ce sont des pages de en élaboration, qui permettent de travailler en amont de la publication. Elles sont invisbles depuis le front-office. Il n\u0026rsquo;y a que les utilisateur·ice·s connecté·e·s sur le Panel qui puissent les voir et les modifier.Non listées Non listées Les pages non listées ne sont pas visibles depuis le front-office mais sont accessibles au public depuis leur URL.\nAinsi, une page avec ce statut peut être une page spéciale, ou unique dans la hiérarchie du site. Par exemple, la page d\u0026rsquo;erreur est une page non listée.\nPublic / Publiées Public / Publiées Les pages en état public sont visible depuis le front-office et accessible au public. Elles sont publiées au sein du site internet et sont employées comme les pages actives du site.\nToutes les pages accessibles depuis le site internet, via des menus ou des liens, sont des pages publiées.\n Chaque statut est notifé par une couleur attribuée à la page :\n Les pages Brouillons sont représentés de couleur rouge. Les pages Non listées sont représentées par une couleur bleue. Les pages Public ou Publiées sont représentées par une couleur verte.   Organisation des pages par statut #  Les pages sont organisées dans le Panel en fonction de leur statut. Vous trouverez ainsi régluièrement des sections rassemblant toutes les pages publiques (ou publiées), d\u0026rsquo;autre rassemblant toutes les pages non listées et enfin, d\u0026rsquo;autres regroupant les brouillons.\nSouvent, ces sections prennent des présentations différentes et accordent plus d\u0026rsquo;importance visuelle aux pages publiées (ou publiques) pour bien les différencier des autres. Comme dans l\u0026rsquo;exemple suivant :\n  Changer le statut d\u0026rsquo;une page #  Pour publier une page, vous pouvez cliquer sur le bouton correspondant à son statut, par exemple : Brouillon, dans la barre d\u0026rsquo;outils de le page, ou alors cliquer sur le bouton Paramètres \u0026gt; Changer le status.\nLe formulaire de changement de statut apparaîtera alors, au sein duquel vous pourrez modfier l\u0026rsquo;état de la page.\n  Attention : Vous ne pourrez publier un brouillon que si tous les champs obligatoires de la page ont été rempli, et si tous les champs sont valides. Ceci pour éviter des erreurs dans le site internet.   Bon à savoir : La plupart du temps, il n\u0026rsquo;est pas nécessaire de supprimer une page, changer son statut de publiée à brouillon et suffisant pour ne plus la rendre visible sur le site et conserver le travail déjà effectué.   Statut vérouillé #  Pour certaine page du site, leur statut est vérouillé et il n\u0026rsquo;est pas possible de le changer. C\u0026rsquo;est principalement le cas pour les pages importantes du site, ou présentes à son premier niveau hiérarchique.\nCe sont des page qu\u0026rsquo;il ne sert à rien de dé-publier ou de masquer du site internet, au risque de créer des erreurs.\nLes pages au statut vérouillé sont visibles par l\u0026rsquo;icône d\u0026rsquo;un rond évidé et barré qui remplace le rond plein et coloré habituel.\n "});index.add({'id':30,'href':'/docs/panel/utilisateurs/actions/','title':"Actions de compte",'section':"Comptes utilisateur·ice·s",'content':"Actions de compte #  Tous les comptes peuvent être gérés et modifés depuis le Panel :\n Vous pouvez créer autant de compte que nécessaires. Modifier leur informations. Les supprimer au besoin.  Ces actions vous permettent de garder un travail d\u0026rsquo;équipe correctement organisé et efficace.\nCréer un compte utilisateur #  Pour créer un nouveau compte utilistateur·ice, ouvrez le menu avec le hamburger et cliquez sur le boutons Utilisateurs. Vous trouverez le bouton Ajouter un nouvel utilisateur dans le coin gauche de la page, qui vous amènera au formulaire de création d’utilistateur·ice.\n Remplissez les informations requises, comme l’adresse email et le mot de passe, et cliquez sur le bouton créer pour ajouter le·la nouvel·le utilistateur·ice. Également, renseigner la langue Français pour que l’interface du Panel soit en français pour cet·te utilisateur·ice.\n   Rôle Description     Admin L\u0026rsquo;utilisateur·ice à accès à l\u0026rsquo;intégralité des options du site internet et peut tout faire. **Ce rôle est à réserver à l\u0026rsquo;équipe de la radio.   Antenne L\u0026rsquo;utilisateur·ice à un accès limité au site internet, et ne peut pas en modifier l\u0026rsquo;intégralité du contenu. Ce rôle est pour les éditeurs d\u0026rsquo;Antenne et autre collaborateur·trice du site internet qui n\u0026rsquo;ont pas besoin d\u0026rsquo;un accès complet.    À propos Vous devriez éviter d\u0026rsquo;utiliser une même adresse email pour plusieurs utilisateur·ice·s du site, sinon cela risque d’engendrer des problèmes de connexion.  Attention Notez bien le mot de passe de l’utilisateur·ice à sa création, il n’y a pas de moyen de le récupérer par la suite.   Modifier un compte #  Pour accéder aux options d’un compte utilistateur·ice, cliquez sur l’icone options à côté de l’utilistateur·ice à partir de la page Utilisateurs pour ouvrir le menu déroulant comportant les options de modification.\n Vous pouvez également accéder au menu déroulant de modification à partir de la page d’un compte utilistateur·ice, en cliquant sur le bouton Paramètres.\n Les comptes utilisateur·ice·s sont identifiés par leur adresse email, cependant vous pouvez leur donner un nom plus reconnaissable. Il est possible de changer le nom à tout moment en cliquant sur le bouton Renommer cet utilisateur.\nVous pouvez également modifier l\u0026rsquo;adresse email, le mot de passe, et la langue utilisée par le Panel, et ce en cliquant sur les boutons correspondants.\n Supprimer un compte #  Pour supprimer un compte utilisateur·ice, cliquez sur le bouton Supprimer cet utilisateur. Tous les comptes peuvent être supprimés sauf le dernier d’entre eux.\n"});index.add({'id':31,'href':'/docs/contenu/fichiers/section/','title':"Gérer les fichiers",'section':"Fichiers",'content':"Gérer les fichiers #  Pour la pluspart des pages, vous verrez un onglet Fichiers à gauche de la barre d\u0026rsquo;onglet de la page, avec un accès rapide à tous les fichiers de la page.\n Outils #  Cette section regroupe tous les fichiers qui ont été importé dans cette page de contenu. Vous pouvez cliquer sur un fichier pour accéder à sa page de fichier, ou alors gérer ses paramètres directement depuis cette section.\n   Élément Description     Aperçu du fichier Si le fichier est une image, vous avez un aperçu de celle-ci dans le corps de la boîte de fichier. Sinon, le fichier sera représenté par une icône proche de son type (Par exemple : un document pour un .pdf, une note de musique pour un .mp3…)   Nom du fichier Le nom du fichier est affiché juste en dessous de l\u0026rsquo;aperçu. La plupart du temps, les fichiers sont classés par ordre alphabétique, ainsi il peut être intéressant de renommer les fichiers en amont pour s\u0026rsquo;organiser.   Bouton d\u0026rsquo;organisation des fichiers Vous pouvez déplacez et ordonner les fichiers comme bon vous semble. Ceci, en cliquant sur le bouton en haut à droite de la boîte de fichier, qui apparaît au survol, et en déplaçant le fichier à l\u0026rsquo;endroit voulu.   Bouton … d\u0026rsquo;options supplémentaires Ce bouton vous permet d\u0026rsquo;accéder au menu déroulant des paramètres du fichier     Organiser les fichiers #  Ici, le bouton composé de six petits carrés noir dans un carré blanc vous permet de déplacer les fichiers et de les organiser. Il apparaît au survol de la boîte de fichier avec la souris.\n "});index.add({'id':32,'href':'/docs/contenu/pages/sections/','title':"Sections de pages",'section':"Pages et publications",'content':"Sections de pages #  Au sein du Panel, vous rencontrerez réguilièrement des sections regroupant différentes pages. Ce sont les sections de pages.\nElles se présentent de différentes manière, selon le modèle de la page, sa portée, etc. Cette partie de la documentation regroupe ces différentes sections et en éclairci les particularités.\n La liste de pages #  Ces section présente les pages sous la forme de liste, la plus part du temps triées par date, ou par ordre alphabétique.\nLa liste est elle-même divisée en trois catégories, représentant les statuts des pages. L\u0026rsquo;exemple suivant, tiré de la page Blog présente une section de page en liste avec les articles du blog du site internet.\n    Élément Description     Aperçu de la page Les listes utilisent souvent les images de couverture des pages, ou alors des icones, pour présenter un premier aperçu de la page. Vous pouvez cliquez sur ce carré pour ouvrir la page en question   Titre de la page Le deuxième élément distinctif est le titre de la page, qui est également cliquable pour ouvrir la page   Date de publication Les pages sont ensuite séparées par leur dates de publication, surtout lorsqu\u0026rsquo;elles sont tirées par ordre chronologique   Statut de la page Un disque de couleur indique le statut de la page. Le disque est vert lorsque la page est publique (ou publiée). Le disque est bleu lorsque la page est non-listée. Le disque est rouge lorsque la pages est un brouillon   Le bouton … des options supplémentaires Ce bouton permet d\u0026rsquo;ouvrir un menu déroulant d\u0026rsquo;options supplémentaires.     Les sections de pages importantes #  Dans certains cas, les pages publiées (ou publiques) ont une importance primordiales au sein du site internet. Elles sont alors présentées dans des sections plus grandes, avec des boîtes de pages au lieu de la liste habituelle. Les images de couverture ou les icônes prennent alors plus de place, mais les différents boutons restent les même. On retrouve le titre de la page, son statut et le bouton … d\u0026rsquo;options supplémentaires.\nLes exemples suivants présentent des sections importantes, notamment celle des Pages de premier niveau du site mise en avant par des icônes, et les pages Antenne depuis la page Antennes, distinguées par leur image de couverture.\n   Le tableau de pages #  Dans certains cas, les pages sont présentées sous la forme d\u0026rsquo;un tableau, regroupant de nombreuses informations les concernant. Ceci pour accélerer la gestion des pages et le travail sur de nombreuses pages à la suite.\nIci par exemple, les contributions de l\u0026rsquo;antenne Afrotopiques dans le programme Podcast Afrotopiques.\n "});index.add({'id':33,'href':'/docs/contenu/pages/creation/','title':"Créer une page",'section':"Pages et publications",'content':"Créer une page #  Pour créer une page, cliquez sur le bouton + ajouter dans le coin supérieur droit d\u0026rsquo;une section de pages.\nForumlaire de création #  Toutes les nouvelles pages dans le Panel sont crées avec un statut de brouillon, ceci, pour éviter la publication accidentelle d\u0026rsquo;une page pas encore prête. Ainsi, la création de nouvelles pages n\u0026rsquo;est possible que depuis une section Brouillons, ou alors depuis une section qui présente toutes les pages, indépendamment de leur statut.\nVous devrez alors remplir le formulaire de création de page qui vous demandera deux informations essentielles, obligatoires et fortements liées, qui sont : le titre de la page, et son identifiant.\n Une fois une page créé, vous arriverez sur un modèle vierge de page, qu\u0026rsquo;il vous faudra remplir avec les informations requises.\n Titre et identifiant de la page #     Information Description     Titre de la page Le titre d\u0026rsquo;une page peut être soit son nom commun d\u0026rsquo;usage, comme Contact pour la page de contact, ou le titre d\u0026rsquo;un texte si la page est un article de blog, par exemple Mon super article.   Identifiant de la page L\u0026rsquo;identifiant d\u0026rsquo;une page va être le texte de réfenrence utilisé dans l\u0026rsquo;URL de la page. Aussi, il ne doit contenir ni espace, ni caractère spécial. Par défaut, il est créé automatiquement à partir du titre de la page, par exemple : contact. Mais il est également possible de le prersonnaliser, notamment pour créer des URLs courtes et reconnaissable, par exemple : super-acticle qui donnera inact.fr/blog/super-article pour le titre Mon super article.    Le titre d\u0026rsquo;une page et son identifiant ne sont lié qu\u0026rsquo;à la création d\u0026rsquo;une page. Si vous changez le titre d\u0026rsquo;une page a postériori, son identifiant ne sera pas automatiquement mis à jour. Pensez alors à changer l\u0026rsquo;identifiant en même temps si le changement de titre est conséquent.  Attention Si vous changez l\u0026rsquo;identifiant d\u0026rsquo;une page, pensez bien à vérifier bien que la page n\u0026rsquo;est pas appellée à un autre endroit du Panel. Si c\u0026rsquo;est le cas, mettez à jour l\u0026rsquo;appel de la page avec le nouvel identifiant, sinon l\u0026rsquo;appel ne fonctionnera plus.   URL de la page #  Pour comprendre le lien entre l\u0026rsquo;identifiant d\u0026rsquo;une page et son URL, il faut comprendre comment est composé l\u0026rsquo;URL.\n L\u0026rsquo;URL indique la position de la page dans la hiérarchie du site. La racine, ou le site en lui-même est représenté par l\u0026rsquo;URL : www.r22.fr. Une page de premier niveau, ou positionnée directement à la racine, vera son identifiant placé juste après l\u0026rsquo;URL de la racine. Ainsi www.r22.fr/antennes pour la page Antennes, www.r22.fr/blog pour le blog. Une page située à l\u0026rsquo;intérieur d\u0026rsquo;une page de premier niveau vera son identifiant ajouté à la suite de celui de sa page parente. Par exemple, l\u0026rsquo;URL suivante : www.r22.fr/antennes/afrotopiques représente la page Afrotopiques qui est située au sein de la page Antennes qui est une page de premier niveau du site.  Dans un autre exemple, si vous créez un dossier nommé blog comme enfant direct de la racine, cette page sera accessible depuis l\u0026rsquo;URL https:://inact.fr/blog, etc.\nDans cette logique, le schéma de page suivant :\nRacine ├── Blog ├── Article 1… └── Antennes ├── Afrotopiques ├── Ding ding dong └── …    mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph LR 0[Racine] 1[Blog] 2[Antennes] 21[Afrotopiques] 22[Ding ding dong] 211[\"Podcasts…\"] 212[\"Rencontres…\"] 0 -- 1 0 -- 2 2 -- 21 2 -- 22 21 -- 211 21 -- 212  Équivaut à :\ngraph LR 0{{www.r22.fr}} 1{{/blog}} 2{{/antennes}} 21{{/afrotopiques}} 22{{/ding-ding-dong}} 211{{\"/podcast…\"}} 212{{\"/rencontres…\"}} 0 --- 1 0 --- 2 2 --- 21 2 --- 22 21 --- 211 21 --- 212 Et ainsi de suite pour toute l\u0026rsquo;arborescence du site internet.\n"});index.add({'id':34,'href':'/docs/contenu/fichiers/utilisation/','title':"Utiliser les fichiers",'section':"Fichiers",'content':"Utiliser les fichiers #  Pour utiliser des fichier au sein d\u0026rsquo;une page de contenu, vous devez d\u0026rsquo;abord les importer au sein de celle-ci. Ensuite, vous pourrez indiquer à la page quels fichiers utiliser parmi tout ceux que vous aurez importé.\nVous rencontrerez plusieurs type de champ de sélection de fichiers au sein du Panel, cette section couvre les plus communs, mais tous fonctionnent sur le même modèle. Avec un état vide et un état rempli.\nChamp de sélection de fichier unique #  Par exemple, le champ suivant vous demande de choisir une image qui sera la couverture de la page parmis tous les fichiers importé sur la page. Le champ de sélection est en état vide et vous indique qu\u0026rsquo;aucun fichier n\u0026rsquo;a encore été sélectionné.\n Lorsque vous cliquez sur le champ, ou sur le bouton + ajouter un formulaire de sélection apparaît ou vous pouvez choisir un fichier adapté parmi ceux que possède la page.\n Conseil : Remarquez la barre de recherche au dessus du formulaire, elle vous permet de rechercher des fichiers par leur nom. Très utile si la page possède plusieurs dizaines de fichiers.  Une fois le fichier sélectionné, le champ afficera un état rempli, avec un aperçu du fichier. Le champ ne requiérant qu\u0026rsquo;un seul fichier, le bouton + ajouter a disparu.\nSi vous souhaitez changer le fichier, vous devez d\u0026rsquo;abord dé-sélectionner le fichier déjà choisi, pour ensuite en choisir un nouveau. Pour dé-sélectionner un fichier, cliquez sur le bouton -.\n  Champ de sélection de plusieurs fichiers #  De la même façon qu\u0026rsquo;une champ de sélection de fichier unique, ce champ-ci possède un état vide et un état rempli et peut être rempli grâce à un formulaire de sélection.\nIl est possible qu\u0026rsquo;un champ de sélection multiple ai un nombre limite maximal de fichier sélectionnés, à ce moment, le bouton + ajouter disparaît du champ.\n "});index.add({'id':35,'href':'/docs/contenu/pages/parametres/','title':"Paramètres et suppression",'section':"Pages et publications",'content':"Paramètres des pages et suppression #  Chaque page possède plusieurs informations essentielles, qui sont la plupart du temps décidées par avance ou à sa création. Vous pouvez modifer ces informations au besoin dans les paramètres de la page.\nLes paramètres #  Les paramètres sont accessibles soit :\n Depuis la barre d\u0026rsquo;outil de la page, en haut à droite, sous son titre. Depuis le bouton … dans les sections de pages, situé le plus souvent à gauche de la boîte de page, ou en dessous de la carte de page.    Liste des paramètres #     Paramètre Description     Ouvrir Ce bouton est accessible depuis les sections de pages, et vous permet d\u0026rsquo;ouvrir la page du Panel correspondant à cette page du site.   Renommer Cette option vous permet de changer le titre d\u0026rsquo;une page.   Dupliquer Cette option vous permet de créer une copie conforme de la page en lui donnant un nouveau titre et un nouvel identifiant.   Modifier l\u0026rsquo;URL Cette option vous permet de changer l\u0026rsquo;identifiant de la page, et ainsi de modifier son URL au sein du site.   Changer le statut Cette option vous permet de changer le statut d\u0026rsquo;une page, entre Brouillon, Non listée ou Publiée.   Changer le modèle Vous pouvez changer le template, ou modèle d\u0026rsquo;une page. Cette option est inaccessible par défaut dans le Panel pour le site d\u0026rsquo;INACT, car les modèles sont toujours uniques.   Supprimer Ce bouton vous permet de supprimer la page, son contenu et éventuellement ces sous-pages. C\u0026rsquo;est une action qui n\u0026rsquo;est pas à prendre à la légère car il n\u0026rsquo;est pas possible de récupérer du contenu supprimé     Supprimer une page #  Pour supprimer une page, cliquez sur le bouton suprimmer dans les Paramètres de le page.\nUne boîte modale d\u0026rsquo;information vous demandera, par précaution, de confirmer votre choix et la suppression de la page.\nSi la page possède des sous-pages, la boîte modale vous demandera d\u0026rsquo;écrire le nom de la page pour confirmer votre choix, et ainsi éviter des erreurs potentiellement désastreuses pour le site.\n "});index.add({'id':36,'href':'/docs/contenu/pages/edition/','title':"Édition des pages et travail collaboratif",'section':"Pages et publications",'content':"Édition des pages et travail collaboratif #  Plusieurs paramètres vous permettent de modifer le contenu des pages et d\u0026rsquo;éviter les pertes accidentelles de votre travail ou de celui de vos collaborateur·ice·s.\nVérouillage de contenu #  Le Panel va automatiquement vérouiller les pages en train d\u0026rsquo;être éditée par un·e autre utilisateur·ice connecté·e au Panel. Ainsi le travail équipe est beaucoup plus sûr. Si vous ouvrez une page en train d\u0026rsquo;être éditée par un·e autre utilisateur·ice, vous en serez informé et ne pourrez pas écraser leur changements.\n À propos : Cette fonctionnalité du Panel rappèle pourquoi il est très important que chaque utilisateur·ice possède un compte propre. Comme cela, chacun·e peut travailler en toute sérénité.   Modification non enregistrées #  Quand vous éditez des pages, des fichiers ou des comptes utilisateur·ice, vous verrez une icone Modification non enregistrées représentée par un crayon, dans le header du Panel. Cet apreçu des changements rend beaucoup plus simple le suivi des contenus dont la création est toujours en cours.\n "});index.add({'id':37,'href':'/posts/goisforlovers/','title':"(Hu)go Template Primer",'section':"Blog",'content':"Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.\nThis document is a brief primer on using Go templates. The Go docs provide more details.\nIntroduction to Go Templates #  Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that Go templates parse very quickly.\nA unique characteristic of Go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used. More details can be found in the Go docs.\nBasic Syntax #  Golang templates are HTML files with the addition of variables and functions.\nGo variables and functions are accessible within {{ }}\nAccessing a predefined variable \u0026ldquo;foo\u0026rdquo;:\n{{ foo }}  Parameters are separated using spaces\nCalling the add function with input of 1, 2:\n{{ add 1 2 }}  Methods and fields are accessed via dot notation\nAccessing the Page Parameter \u0026ldquo;bar\u0026rdquo;\n{{ .Params.bar }}  Parentheses can be used to group items together\n{{ if or (isset .Params \u0026quot;alt\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;) }} Caption {{ end }}  Variables #  Each Go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page.\nA variable is accessed by referencing the variable name.\n\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt;  Variables can also be defined and referenced.\n{{ $address := \u0026quot;123 Main St.\u0026quot;}} {{ $address }}  Functions #  Go template ship with a few functions which provide basic functionality. The Go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo.\nExample:\n{{ add 1 2 }}  Includes #  When including another template you will pass to it the data it will be able to access. To pass along the current context please remember to include a trailing dot. The templates location will always be starting at the /layout/ directory within Hugo.\nExample:\n{{ template \u0026quot;chrome/header.html\u0026quot; . }}  Logic #  Go templates provide the most basic iteration and conditional logic.\nIteration #  Just like in Go, the Go templates make heavy use of range to iterate over a map, array or slice. The following are different examples of how to use range.\nExample 1: Using Context\n{{ range array }} {{ . }} {{ end }}  Example 2: Declaring value variable name\n{{range $element := array}} {{ $element }} {{ end }}  Example 2: Declaring key and value variable name\n{{range $index, $element := array}} {{ $index }} {{ $element }} {{ end }}  Conditionals #  If, else, with, or, \u0026amp; and provide the framework for handling conditional logic in Go Templates. Like range, each statement is closed with end.\nGo Templates treat the following values as false:\n false 0 any array, slice, map, or string of length zero  Example 1: If\n{{ if isset .Params \u0026quot;title\u0026quot; }}\u0026lt;h4\u0026gt;{{ index .Params \u0026quot;title\u0026quot; }}\u0026lt;/h4\u0026gt;{{ end }}  Example 2: If -\u0026gt; Else\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{else}} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Example 3: And \u0026amp; Or\n{{ if and (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}}  Example 4: With\nAn alternative way of writing \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent.\nThe first example above could be simplified as:\n{{ with .Params.title }}\u0026lt;h4\u0026gt;{{ . }}\u0026lt;/h4\u0026gt;{{ end }}  Example 5: If -\u0026gt; Else If\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{ else if isset .Params \u0026quot;caption\u0026quot; }} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Pipes #  One of the most powerful components of Go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline\u0026rsquo;s output becomes the input of the following pipe.\nBecause of the very simple syntax of Go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline.\nA few simple examples should help convey how to use the pipe.\nExample 1 :\n{{ if eq 1 1 }} Same {{ end }}  is the same as\n{{ eq 1 1 | if }} Same {{ end }}  It does look odd to place the if at the end, but it does provide a good illustration of how to use the pipes.\nExample 2 :\n{{ index .Params \u0026quot;disqus_url\u0026quot; | html }}  Access the page parameter called \u0026ldquo;disqus_url\u0026rdquo; and escape the HTML.\nExample 3 :\n{{ if or (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}} Stuff Here {{ end }}  Could be rewritten as\n{{ isset .Params \u0026quot;caption\u0026quot; | or isset .Params \u0026quot;title\u0026quot; | or isset .Params \u0026quot;attr\u0026quot; | if }} Stuff Here {{ end }}  Context (aka. the dot) #  The most easily overlooked concept to understand about Go templates is that {{ . }} always refers to the current context. In the top level of your template this will be the data set made available to it. Inside of a iteration it will have the value of the current item. When inside of a loop the context has changed. . will no longer refer to the data available to the entire page. If you need to access this from within the loop you will likely want to set it to a variable instead of depending on the context.\nExample:\n {{ $title := .Site.Title }} {{ range .Params.tags }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;{{ $baseurl }}/tags/{{ . | urlize }}\u0026quot;\u0026gt;{{ . }}\u0026lt;/a\u0026gt; - {{ $title }} \u0026lt;/li\u0026gt; {{ end }}  Notice how once we have entered the loop the value of {{ . }} has changed. We have defined a variable outside of the loop so we have access to it from within the loop.\nHugo Parameters #  Hugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates.\nUsing Content (page) Parameters #  In each piece of content you can provide variables to be used by the templates. This happens in the front matter.\nAn example of this is used in this documentation site. Most of the pages benefit from having the table of contents provided. Sometimes the TOC just doesn\u0026rsquo;t make a lot of sense. We\u0026rsquo;ve defined a variable in our front matter of some pages to turn off the TOC from being displayed.\nHere is the example front matter:\n--- title: \u0026quot;Permalinks\u0026quot; date: \u0026quot;2013-11-18\u0026quot; aliases: - \u0026quot;/doc/permalinks/\u0026quot; groups: [\u0026quot;extras\u0026quot;] groups_weight: 30 notoc: true --- Here is the corresponding code inside of the template:\n {{ if not .Params.notoc }} \u0026lt;div id=\u0026quot;toc\u0026quot; class=\u0026quot;well col-md-4 col-sm-6\u0026quot;\u0026gt; {{ .TableOfContents }} \u0026lt;/div\u0026gt; {{ end }}  Using Site (config) Parameters #  In your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome.\nFor instance, you might declare:\nparams: CopyrightHTML: \u0026#34;Copyright \u0026amp;#xA9; 2013 John Doe. All Rights Reserved.\u0026#34; TwitterUser: \u0026#34;spf13\u0026#34; SidebarRecentLimit: 5 Within a footer layout, you might then declare a \u0026lt;footer\u0026gt; which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again. This would let you easily update just your top-level config file each January 1st, instead of hunting through your templates.\n{{if .Site.Params.CopyrightHTML}}\u0026lt;footer\u0026gt; \u0026lt;div class=\u0026quot;text-center\u0026quot;\u0026gt;{{.Site.Params.CopyrightHTML | safeHtml}}\u0026lt;/div\u0026gt; \u0026lt;/footer\u0026gt;{{end}} An alternative way of writing the \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent:\n{{with .Site.Params.TwitterUser}}\u0026lt;span class=\u0026quot;twitter\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;https://twitter.com/{{.}}\u0026quot; rel=\u0026quot;author\u0026quot;\u0026gt; \u0026lt;img src=\u0026quot;/images/twitter.png\u0026quot; width=\u0026quot;48\u0026quot; height=\u0026quot;48\u0026quot; title=\u0026quot;Twitter: {{.}}\u0026quot; alt=\u0026quot;Twitter\u0026quot;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt;{{end}} Finally, if you want to pull \u0026ldquo;magic constants\u0026rdquo; out of your layouts, you can do so, such as in this example:\n\u0026lt;nav class=\u0026quot;recent\u0026quot;\u0026gt; \u0026lt;h1\u0026gt;Recent Posts\u0026lt;/h1\u0026gt; \u0026lt;ul\u0026gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}} \u0026lt;li\u0026gt;\u0026lt;a href=\u0026quot;{{.RelPermalink}}\u0026quot;\u0026gt;{{.Title}}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; {{end}}\u0026lt;/ul\u0026gt; \u0026lt;/nav\u0026gt; "});index.add({'id':38,'href':'/posts/hugoisforlovers/','title':"Getting Started with Hugo",'section':"Blog",'content':"Step 1. Install Hugo #  Go to Hugo releases and download the appropriate version for your OS and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at Install Hugo\nStep 2. Build the Docs #  Hugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\n Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:\ngit clone https://github.com/spf13/hugo cd hugo /path/to/where/you/installed/hugo server --source=./docs \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Press ctrl+c to stop  Once you\u0026rsquo;ve gotten here, follow along the rest of this page on your local build.\nStep 3. Change the docs site #  Stop the Hugo process by hitting Ctrl+C.\nNow we are going to run hugo again, but this time with hugo in watch mode.\n/path/to/hugo/from/step/1/hugo server --source=./docs --watch \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Watching for changes in /Users/spf13/Code/hugo/docs/content \u0026gt; Press ctrl+c to stop  Open your favorite editor and change one of the source content pages. How about changing this very file to fix the typo. How about changing this very file to fix the typo.\nContent files are found in docs/content/. Unless otherwise specified, files are located at the same relative location as the url, in our case docs/content/overview/quickstart.md.\nChange and save this file.. Notice what happened in your terminal.\n\u0026gt; Change detected, rebuilding site \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 26 ms  Refresh the browser and observe that the typo is now fixed.\nNotice how quick that was. Try to refresh the site before it\u0026rsquo;s finished building. I double dare you. Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.\nStep 4. Have fun #  The best way to learn something is to play with it.\n"});index.add({'id':41,'href':'/docs/construction/','title':"Mettre en ligne une contribution",'section':"Docs",'content':"Mettre en ligne une contribution #  Dans cette courte explication, nous allons passer en revue les différents points qui permettent de publier au sein du site internet.\nOrganisation du site internet #  Le site internet comprend la hiérarchie suivante :\n  Les Antennes qui sont des ensembles (associations / collectifs / artistes / chercheurs / structures / lieux / projets…) qui produisent, publient et accueillent des contributions. Elles possèdent des pages Antennes.\n  Les Programmes, qui sont des axes éditoriaux liés à des antennes. Ils peuvent être liés à des thématiques spécifiques, des calendriers d’émissions, des événements récurrents, etc. Idéalement, ils proposent un certain nombre de contributions, qui peuvent être récurrents, sur un thème particulier.\n  Les Contributions sont les sons qui sont publiés par les antennes, au sein de programme ou non, dans la r22. Ils se classent en plusieurs catégories : Les Publications, les Collections et les Playlists.\n   Cette organisation prend la forme suivante au sein du site internet :\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph LR 1(Antennes) -- 2(Antenne) -- 3(Programme) -- 4(Contribution) À sa racine du site internet se trouve une page Antennes qui contient l\u0026rsquo;ensemble des antennes du site internet. Chacune de ces antennes peut avoir des programmes et publier des contributions. Nous allons voir comment ce schémas se déroule pour une antenne précise, par exemple, l\u0026rsquo;antenne Ding Dong Dong :\ngraph LR 1(r22) -- 2(Antennes) --Antenne-- 3(Ding Dong Dong) L\u0026rsquo;antenne Ding Dong Dong possède un programme intitulé Capsules Ding Dong Dong, il se trouve ainsi à la racine de cette antenne, comme suit :\ngraph LR 1(r22) -- 2(Antennes) --Antenne-- 3(Ding Dong Dong) --Programme-- 4(Capsules Ding Dong Dong) Au sein de ce programme, Ding Dong Dong publie une contribution, qui prend la forme d\u0026rsquo;une publication (nous verrons ces formes un peu plus bas). Ainsi, l\u0026rsquo;organisation se poursuit comme ceci :\ngraph LR 2(Antennes) --Antenne-- 3(Ding Dong Dong) --Programme-- 4(Capsules Ding Dong Dong) --Publication-- 5(\"Capsule n1 …\") Cette page contribution va alors contenir un son (un fichier mp3) qui lui correspond, une image qui va lui servir de couvertue, et un texte, des informations, etc. qui se regroupe sous un article (un fichier texte). Nous donnant l\u0026rsquo;architecture suivante.\ngraph LR 3(Ding Dong Dong) -- 4(Programme) -- 5(Contribution) 5 -- 6[contribution.mp3] 5 -- 7[contribution.jpg] 5 -- 8[contribution.txt] Et il en va de même pour les antennes et programmes, qui possèdent également une image de couverture et un article.\ngraph LR 3(Ding Dong Dong) -- 4(Programme) -- 5(Publication) subgraph Antennes 3 -- 6[\"ding-dong-dong.jpg\"] 3 -- 7[ding-dong-dong.txt] end subgraph Programme 4 -- 8[ding-dong-dong.jpg] 4 -- 9[ding-dong-dong.txt] end subgraph Publication 5 -- 10[capsule-1.mp3] 5 -- 11[capsule-1.jpg] 5 -- 12[capsule-1.txt] end Il est également possible que Ding Dong Dong publie une contribution sans programme. Elle se placerait alors à la racine de l\u0026rsquo;antenne, comme suit :\ngraph TD 3(Ding Dong Dong) -- 4(Programme) -- 5(Publication) 4 -- 7(Publication) 3 -- 8(Programme) -- 9(Publication) 8 -- 10(Publication) 3 -- 6(Publication) Cette organisation se répète et poursuit pour chaque antennes et programmes du site internet, et se retrouve au sein du Back Office qui la reproduit via une interface visuelle.\n Nous allons à présent voir les différents types de contributions possibles. Ainsi, les Publications, les Collections et les Playlists.\nLes publications. #  Les publications sont la forme majoritaire et la plus simple que prend une contribution sur le site de la r22. Son principe est la mise en ligne d\u0026rsquo;un son, accompagné d\u0026rsquo;un article, d\u0026rsquo;images, d\u0026rsquo;informations et de crédits.\nPour créer une publication, il faut séléctionner le modèle de page Publication lors de la création d\u0026rsquo;une page. (C.f.- (docs:Back Office)).\nElle se construit comme suit :\nLe son #  Le son est un fichier mp3 préparé en amont et inséré au sein de la publication. Il peut être éditorialisé grâce à des ancres, qui indiquent une partie spécifique du son à une certaine position. Le son se travaille dans la section : Audio de la page publication.\nSelectionner un fichier #  Pour inséréer un fichier audio, il est nécessaire de l\u0026rsquo;ajouter à la page de la publication. Et ce, soit en cliquant sur le bouton + ajouter au sein de la section Fichiers de la sidebar du panel, soit en le glissant/déposant sur la fenêtre du navigateur. Pour correctement préparer un fichier son avant son ajout au sein du site, voir la section de la documentation (docs:Correctement préparer des sons).\nUne fois le fichier son ajouté à la publication, il est nécessaire de le sectionner via la boîte de séléction Fichier audio. Une fois séléctioner, Enregister la publication une permière fois.\nAprès enregistrement, nous voyons que le player du back office affiche le fichier séléctionner, et que deux cases grisées on récupéré sa durée formatée en (HH:MM:SS), ainsi qu\u0026rsquo;en secondes. À ce moment là, il est nécessaire d'enregister la publication une seconde fois.\nIl est très important de bien suivre cette procédure de double enregistrement pour s\u0026rsquo;assurer de la bonne lecture du fichier par le site internet. Ainsi qu\u0026rsquo;à chaque changement de fichier audio.   Ajouter des ancres #  Pour ajouter des ancres, il faut se rendre au sein de la boîte Ancres juste en dessous de la boîte de séléction du Fichier audio, et cliquer soit sur le bouton Créer la première entrée, soit sur le bouton + ajouter en haut à gauche de la boîte.\nAttention, cette partie de la documentation n\u0026rsquo;est pas à jour !  Apparaît alors une boîte modale ou il est possible de reseigner la position de l\u0026rsquo;ancre en seconde, ainsi que le contenu textuel de cette ancre.\nPour le moment, cette position doit être écrite en seconde. Pour se faire, multiplier le nombre d\u0026rsquo;heures par soixante, les ajouter aux minutres, puis multiplier le nombre de minutes obtenu par 60 et ajouter les secondes restantes. Par exemple, pour placer une ancre à 5:20, il faut faire le calcul suivant :  5 * 60 + 20 300 + 20 320 secondes Autre exemple, pour placer une ancre à 1:20:18, il faut faire le calcul suivant :\n(1 * 60 + 20) * 60 + 18 80 * 60 + 18 4800 + 18 4818 secondes Un autre possible pour les heures, et de les multiplier par 3600 pour obtenir leur nombre de secondes.\nPar la suite, il sera possible d\u0026rsquo;indiquer directement une position en heure, minute, secondes au sein de la boîte modale, et ce calcul ne sera plus nécessaire.\n L\u0026rsquo;article #  L’article est l\u0026rsquo;ensemble des éléments rédigés et visuels qui accompagnent la publication. Il est ainsi composé d’un texte, d’images, de liens \u0026amp; références et d’informations (biographies, crédits). Ces différents éléments sont :\nLe titre #  Chaque publication doit posséder un titre qui la décrive et l\u0026rsquo;identifie. Le titre doit être clair, compréhensible et individuel. Par exemple : Cinémas arabes et nouveaux médias : de nouvelles images pour mémoire ou Elizabeth Povinelli / Karrabing film Collective.\nÉviter au possible les titres trop communs et trop peu détaillé. Par exemple Capsule 1, Capsule 2, etc.   Le lieu #  Si la publication est attachée à un lieu particulier, il est possible de l\u0026rsquo;indiquer ici. La notation préférée est : {{Ville}} • {{Pays}}. Par exemple : Avignon • France ou alors : 11e • Paris • France.\n La date de mise en ligne #  La date à laquelle la publication est mise en ligne. Par défaut, la date inscrite est celle de jour de création de la page. Mais il est possible de l\u0026rsquo;éditer pour publier rétroactivement.\n Catégories #  Cette boîte de séléction permet de choisir la ou les catégorie.s de la contribution. Les catégories sont éditables via les configurations du site. (C.f.- (docs:Configurations)).\n Le chapô #  Cette partie, comme son nom l\u0026rsquo;indique, permet d\u0026rsquo;introduire une publicaiton grâce à un texte visuellement plus fort que l\u0026rsquo;article. Elle doit rester assez courte (entre une et trois phrases) et proposer une introduction à l\u0026rsquo;article comme à la contribution. C\u0026rsquo;est également un appel à écouter la contribution en elle-même qui est ré-employé sur les promos (c.f. - (docs:promos)). Elle ne doit donc pas être négligée.\n L\u0026rsquo;article #  L\u0026rsquo;article permet de décrire une contribution, son contexte, de donner des informations supplémentaire à l\u0026rsquo;écoute ou de présenter la contribution. Il se situe entre la retransciption textuelle du contenu de l\u0026rsquo;audio et son abstract / pitch. Il permet également de donner des informations supplémentaires difficilement accessibles à l\u0026rsquo;écoute. Par exemple, le nom d\u0026rsquo;un.e auteur.ice, le titre et la référence d\u0026rsquo;un ouvrage, d\u0026rsquo;un film… Sa forme est assez libre, mais il offre de nombreuses possibilité d\u0026rsquo;éditorialisations. Il est également possible d\u0026rsquo;insérer des images au sein de l\u0026rsquo;article, nous le verrons un peu plus bas.\n Les crédits #  Ils permettent de donner les informations techniques de la contributions. Par exemple : qui a enregistré, qui a monté/mixé, la date de l’enregistrement, le lieu de l’enregistrement, les contributeurs annexes, les partenaires, les financeurs, etc.\n Les tags #  Ce sont des mots-clefs qui indexent et références la contribution. Idéalement, leur nombre varie entre quatre et huit. Ils peuvent être les grands thèmes et sujets de la contribution, des mots qui y sont réccurents, des personnes référentes, des genres ou catégories au sein desquelles s\u0026rsquo;inscrivent la contribution. Par exemple : Science Fiction, Post-colonialisme, Cinéma indépendant, Performances… Pour plus d\u0026rsquo;information, voir la section (docs:tags) de la documentation.\n Les images #  Au sein d\u0026rsquo;une publication, il est possible lui lier plusieurs images. Elles se séparent en deux catégories\nLa couverture #  C’est l’image principale de la publication. Elle est utilisée en tête sur la page et en vignette sur le reste du site et pour les partages. Sur la page de la publication, elle est affichée en grand au sommet de la page, et est utilisée en plus petit sur les (docs:promos).\nPour ce faire, l\u0026rsquo;image doit avoir une taille suffisante, et doit au minum faire 2200px de large. (C.f.- (docs: Correctement préparer des images).\nPour l\u0026rsquo;insérer, il faut ajouter un fichier image à la page publication, et selectionner le fichier voulu grâce à la boîte de séléction Image de couverture.\n Les images contextuelles. #  Ce sont toutes les images supplémentaires liées à la publication. Par exemple, les photographies liées à une événements, des illustrations, etc. Elles peuvent s’agencer de différentes manières :\n Des images simples, en début, milieu ou fin d\u0026rsquo;article. Pour les insérer, il est possible soit de glisser déposer l\u0026rsquo;image voulue dans l\u0026rsquo;article, soit d\u0026rsquo;utiliser le tag image comme suit : (\\image: {{nom-du-fichier.jpg}}). La taille et la position de l\u0026rsquo;image est alors gérée automatiquement. En carrousel. C\u0026rsquo;est une manière de présenter plusieurs images qui défilent, au sein d\u0026rsquo;un article. Pour le créer, il faut utiliser le tag slider comme ceci : (\\slider : {{image-1.jpg}}, {{image-2.jpg}}, {{image3.png}}). Il est important de ne pas faire d\u0026rsquo;erreur dans le nom des images, ou elles s\u0026rsquo;afficheront pas. De plus, penser à renommer ses images correctement facilite la création de slider.   Qui Publie ? #  Cette section de la contribution permet de définir ses auteur.ice.s, et d\u0026rsquo;indiquer si une ou plusieures antennes / programmes supplémentaires lui sont liées.\nAuteur.ice.s #  Pour ajouter des auteur.ice.s à la publication, il y a deux manières de faire.\n La première est d\u0026rsquo;ajouter un.e auteur.ice existante via la boîte de sélection Auteur.ice.s de l\u0026rsquo;article. Il est possible d\u0026rsquo;en rajouter autant que désiré. La seconde est, dans le cas ou la personne ne possède pas de page auteur.ice, de l\u0026rsquo;inscrire comme auteur.ice fantôme, en écrivant son prénom et nom, terminé par une virgule.  Antennes \u0026amp; Programmes supplémentaires #  Si la publication possède une antenne et / ou un programme supplémentaire, ils peuvent être séléctionné via les boîtes de sélection correspondante. Il faut faire attention à ne pas rajouter l\u0026rsquo;antenne parente, car elle apparaîterai alors deux fois.\n Collection #  La collection est une publication augmentée, qui permet d\u0026rsquo;éditorialiser plusieurs sons au sein d\u0026rsquo;une même page. Pour se faire, il faut, à la création de la page, choisir le modèle de page Collection. Tous le contenu vu précédemment est alors scindé en plusieurs parties.\n À la racine de la collection, se définissent les informations générales : le titre, le chapô, les antennes \u0026amp; programmes supplémentaires… Au sein des sous-collections, se définissent les informations particulières : l\u0026rsquo;article, l\u0026rsquo;audio, les auteur.ices, les tags, etc.  Cela suit le modèle suivant :\ngraph LR 1{{Collection}} 1 -- 5Partie 1] 5 -- 6(\"Titre / Lieu / Date\") 5 -- 7(\"Article\") 5 -- 8(\"Audio / Ancres\") 5 -- 9(\"Tags\") 5 -- 10(\"Auteurices\") 1 -- 11Partie 2] 11 -- 12(\"…\") 1 -- 13Partie 3] 13 -- 14(\"…\") 1 -- 15Partie 4] 15 -- 16(\"…\") Pour créer une sous-collection (aussi appelée collection--sub), il faut créer une nouvelle page au sein de la collection, grâce au bouton +ajouter à côté de la section pages de la sidebar.\nDans l’optique de la refonte, et pour clarifier certains classement et assemblage. Il est proposé un nouvel élément de classification, les « collections ». Ils proviennent des multiples possibles des publications de la R22, et ont pour but de réduire l’usage des programmes. Les collections permettent de rassembler des contributions liées, par exemple : une conférence scindée en trois parties, plusieurs sections d’un enregistrement (le débat et la lecture), un événement, une soirée, etc. qui jusqu’à présent étaient considérés comme des programmes. Il peuvent également servir à concentrer les contributions de grands événements, par exemple, la nuit blanche. Ils servent d’outils à tout faire quand les publications ne correspondent pas aux classements établis.\n"});index.add({'id':42,'href':'/docs/raccourcis/','title':"Raccourcis",'section':"Docs",'content':"Raccourcis #  Voici différents raccourcis qui permettent de facilement faire des liens vers différentes parties de la r22 !\nIls fonctionnent d\u0026rsquo;une manière très simple, il permettent de créer un lien vers une page interne du site. En fonction du {{raccourci}} employé, le line pointera vers une page antenne, programme, auteur.ice… Ce lien se construit en utilisant des {{mots clefs}} choisis, qui serviront également de références pour le lien.\nSyntaxe de référence :\n({{raccourci}}: {mots clefs}}) La construction se fera comme suit : le raccourci (\\antenne: Khiasma) fabriquera la lien suivant : \u0026lt;a href=\u0026quot;/antennes/espace-khiasma\u0026quot;\u0026gt;Khiasma\u0026lt;/a\u0026gt;. Le procédé est sensiblement le même que le kirbytag de (\\link:…), mais permet de fluidifier son écriture. L\u0026rsquo;équivalent du raccourci précédant serait ainsi : (\\link:/antennes/espace-khiasma text: Khiasma).\n Faire un lien vers une antenne #  (antenne: {{nom de l'antenne}}) Ce raccourci fonctionne en réalisant une recherche textuelle au sein des titres de toutes les antennes de la R22. Cette recherche n\u0026rsquo;est pas sensible à la casse et peut utiliser des mots partiels.\nAinsi, le raccourci suivant: (antenne: Khiasma) fera un lien vers l\u0026rsquo;antenne Espace Khiasma. Comme suit :\n(antenne:Khiasma). Autres exemples, les raccourcis suivants : (antenne:ding) ou bien (antenne:dong) feront tous deux un lien vers l\u0026rsquo;antenne Ding Dong Dong. Comme suit :\n(antenne:ding) (antenne:dong) Attention, la recherche textuelle possède ses propres limites et erreurs. Ainsi, un nom mal écrit ou trop long peu renvoyer des résultats improbables. Par exemple, pour faire un lien vers l\u0026rsquo;antenne Potager Liberté, s\u0026rsquo;il on écrit le raccourci (antenne:Le Potager Liberté), il pointera vers l\u0026rsquo;antenne Belleville en vue(s)…  L\u0026rsquo;erreur ici est l\u0026rsquo;utilisation du déterminant au sein du raccourci. Pour être sûr d\u0026rsquo;éviter les erreurs, il vaut mieux restreindre au maximum la recherche, et ainsi préférer (antenne:Potager Liberté) dans le cas présent.\nSi la recherche ne donne aucun réslutat, le nom utilisé s\u0026rsquo;affichera alors simplement en gras.   Faire un lien vers un programme #  (programme: {{nom du programme}}) De même manière que le raccouci vers les antennes, ce raccourci effectue une recherche au sein de toutes les pages programmes de la R22 pour créer un lien vers cette page. Exemple : (\\programme: La fabrique Phantom).\nAttention : Cas particulier. Il est possible que deux programmes aient le même nom. Pour l\u0026rsquo;instant, le tag affiche le premier résultat de la recherche, sans spécificités.   Faire un lien vers un.e auteur.ice #  (auteurice: {{nom de l'auteur.ice}}) Ce raccourci fontionne également comme les deux précédents. Il permet de pointer vers n\u0026rsquo;importe quelle page auteur.ice du site. Cependant, il ne fonctionne pas pour les auteur.ice fantômes, qui n\u0026rsquo;ont pas de pages au sein de la r22. Exemple :\n(auteurice: João Vieira Torres)  Faire un lien vers une publication #  (publication: {{titre de la publication}}) "});})();